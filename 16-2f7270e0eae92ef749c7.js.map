{"version":3,"sources":["webpack:///./src/components/ApolloErrors.tsx","webpack:///./src/components/FormGroupTitle.tsx","webpack:///./src/utils/safe_access.ts","webpack:///./src/components/ViewField.tsx","webpack:///./src/components/ViewFieldArray.tsx","webpack:///./src/components/ViewGroup.tsx","webpack:///./src/custom/templates/dichiarazione-accessibilita/node/view-template.tsx"],"names":["__webpack_require__","d","__webpack_exports__","ApolloErrors","react__WEBPACK_IMPORTED_MODULE_0__","react_i18next__WEBPACK_IMPORTED_MODULE_1__","_utils_errors__WEBPACK_IMPORTED_MODULE_2__","getErrorString","translate","errors","isTooManyRequestError","JSON","stringify","_ref","useTranslation","t","errorString","className","FormGroupTitle","title","get","obj","fn","defaultValue","excludeNull","result","ret","undefined","err","ViewField","field","value","_ref$inline","inline","fieldValue","getFieldValue","react","ViewFieldArray","group","values","name","fields","existingValues","existingFields","map","o","index","Object","keys","fieldName","ViewGroup","key","description","repeatable","components_ViewFieldArray","components_ViewField","InlineViewGroup","Groups","content-compliance","_ref2","complianceStatus","isWebSite","getComplianceString","content-not-accessible","_ref3","accessibilityFields","hasInaccessibleContent","some","_","content-alt","_ref4","content-methodology","_ref5","node","getSelectedLabel","methodology","format","updated_at","feedback-and-contacts","implementation-procedure","application-information","application-org","application-manager","_ref6","PublishModal","_ref7","nodeLink","_useState","useState","isOpen","setIsOpen","Modal","toggle","ModalHeader","tag","ModalBody","style","borderBottom","href","PublishCta","_ref8","nodeId","nodeVersion","_useState2","setNodeLink","react_apollo_esm","mutation","PUBLISH_NODE","refetchQueries","query","GET_LATEST_NODE_WITH_PUBLISHED","variables","id","onCompleted","publishedNode","window","location","hostname","update_node","returning","publishNode","_ref9","publishLoading","loading","publishError","error","es","i18nKey","view_template_PublishModal","Button","color","onClick","version","Template","_ref10","form","sections","section","n","node_revision_group","group_ipa_pa","des_amm","groups","GroupEl","status","view_template_PublishCta"],"mappings":"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","file":"16-2f7270e0eae92ef749c7.js","sourcesContent":["import i18next from \"i18next\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { ApolloErrorsT, isTooManyRequestError } from \"../utils/errors\";\n\nconst getErrorString = (\n  translate: i18next.TFunction,\n  errors: ApolloErrorsT\n) => {\n  if (isTooManyRequestError(errors)) {\n    return translate(\"errors.too_many_requests\");\n  }\n  return JSON.stringify(errors);\n};\n\nexport default function ApolloErrors({ errors }: { errors: any }) {\n  const { t: translate } = useTranslation();\n  const errorString = getErrorString(translate, errors);\n  return errorString ? (\n    <span className=\"apollo-errors\">{errorString}</span>\n  ) : null;\n}\n","import * as React from \"react\";\n\nconst FormGroupTitle = ({ title }: { title: string | null }) => (\n  <h3 className=\"display-3 font-variant-small-caps primary-color-a9 my-2 mt-lg-5 mb-lg-4 text-spaced-xs\">\n    {title || \"\"}\n  </h3>\n);\n\nexport default FormGroupTitle;\n","/**\n * Forked from https://github.com/salesforce/ts-safe-access\n * see also https://stackoverflow.com/questions/52064027/how-can-i-write-a-recursive-nonnullable-type-in-typescript\n *\n * Adds: correct typings\n */\n\ntype RecursiveNonNullable1<T> = { [K in keyof T]: RecursiveNonNullable<T[K]> };\ntype RecursiveNonNullable<T> = RecursiveNonNullable1<NonNullable<T>>;\n\nexport function get<T, R>(\n  obj: T,\n  fn: (obj: RecursiveNonNullable<T>) => R,\n  defaultValue: NonNullable<R>,\n  excludeNull = false\n): R {\n  try {\n    const result = fn(obj as any);\n    const ret = excludeNull\n      ? result === null\n        ? defaultValue\n        : result\n      : result;\n    return ret === undefined ? defaultValue : ret;\n  } catch (err) {\n    return defaultValue;\n  }\n}\n\nexport function has<T, R>(obj: T, getFn: (o: T) => R) {\n  try {\n    const result = getFn(obj);\n    return result !== undefined;\n  } catch (err) {\n    return false;\n  }\n}\n","import * as React from \"react\";\nimport { FieldT, getFieldValue } from \"../utils/forms\";\n\nconst ViewField = ({\n  field,\n  value,\n  inline = false\n}: {\n  field: FieldT;\n  value: string;\n  inline?: boolean;\n}) => {\n  const fieldValue = getFieldValue({ field, value });\n  return fieldValue ? (\n    <div className=\"mb-4\">\n      <p className=\"w-paragraph font-weight-bold neutral-2-color-b5 mb-2\">\n        {field.title}\n        {inline ? (\n          <span>\n            {\": \"}\n            <span className=\"font-weight-normal\">{fieldValue}</span>\n          </span>\n        ) : (\n          \"\"\n        )}\n      </p>\n      {!inline && <p className=\"w-paragraph\">{fieldValue}</p>}\n    </div>\n  ) : null;\n};\n\nexport default ViewField;\n","import * as React from \"react\";\nimport { FormGroupT } from \"../utils/forms\";\n\n/**\n * Do not use tihs component, it is a placeholder.\n * TODO: implement.\n */\nconst ViewFieldArray = ({\n  group,\n  values\n}: {\n  group: FormGroupT;\n  values: any;\n}) => {\n  if (!group.name || !group.fields) {\n    return null;\n  }\n  const existingValues = values[group.name];\n  if (!existingValues) {\n    return null;\n  }\n  const existingFields = existingValues.map(\n    (o: Record<string, string>, index: number) =>\n      Object.keys(o).map(fieldName => {\n        return `${group.name}.${index}.${fieldName}`;\n      })\n  );\n  return <>{existingFields}</>;\n};\n\nexport default ViewFieldArray;\n","import * as React from \"react\";\nimport { FormGroupT } from \"../utils/forms\";\nimport FormGroupTitle from \"./FormGroupTitle\";\nimport ViewField from \"./ViewField\";\nimport ViewFieldArray from \"./ViewFieldArray\";\n\nconst ViewGroup = ({\n  group,\n  values,\n  inline = false\n}: {\n  group: FormGroupT;\n  values: Record<string, string>;\n  inline?: boolean;\n}) => (\n  <div className=\"fieldset mb-3 mb-lg-5\" key={group.name!}>\n    {group.title && <FormGroupTitle title={group.title} />}\n    {group.description && <p>{group.description}</p>}\n    {group.repeatable && <ViewFieldArray group={group} values={values} />}\n    {!group.repeatable &&\n      group.fields &&\n      group.fields.map(field =>\n        field && field.name ? (\n          <ViewField\n            inline={inline}\n            key={field.name}\n            field={field}\n            value={values[field.name]}\n          />\n        ) : null\n      )}\n  </div>\n);\n\nexport default ViewGroup;\n","/**\n * Template for node of type \"dichiarazione-accessibilità\".\n *\n * TODO: multilang\n */\nimport { format } from \"date-fns\";\nimport * as React from \"react\";\n\nimport { useState } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { Button, Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\nimport ApolloErrors from \"../../../../components/ApolloErrors\";\nimport FormGroupTitle from \"../../../../components/FormGroupTitle\";\nimport ViewGroup from \"../../../../components/ViewGroup\";\nimport { GetNode_latest_published } from \"../../../../generated/graphql/GetNode\";\nimport {\n  PublishNode,\n  PublishNodeVariables\n} from \"../../../../generated/graphql/PublishNode\";\nimport {\n  GET_LATEST_NODE_WITH_PUBLISHED,\n  PUBLISH_NODE\n} from \"../../../../graphql/hasura\";\nimport {\n  FieldT,\n  FormGroupT,\n  FormT,\n  getSelectedLabel\n} from \"../../../../utils/forms\";\nimport { get } from \"../../../../utils/safe_access\";\n\nconst InlineViewGroup = ({\n  group,\n  values\n}: {\n  group: FormGroupT;\n  values: Record<string, string>;\n  inline?: boolean;\n}) => ViewGroup({ group, values, inline: true });\n\nconst getComplianceString = (complianceStatus: string, isWebSite: boolean) => {\n  switch (complianceStatus) {\n    case \"compliant\":\n      return `${\n        isWebSite ? \"Questo sito web\" : \"Questa applicazione\"\n      } è conforme.`;\n    case \"partially-compliant\":\n      return `${\n        isWebSite ? \"Questo sito web\" : \"Questa applicazione\"\n      } è parzialmente conforme, in ragione dei casi di non conformità [e/o] delle deroghe elencate di seguito.`;\n    case \"non-compliant\":\n      return `${\n        isWebSite ? \"Questo sito web\" : \"Questa applicazione\"\n      } non è conforme.`;\n    default:\n      return \"\";\n  }\n};\n\nconst Groups: Record<\n  string,\n  ({\n    group,\n    values,\n    fields,\n    node\n  }: {\n    group: FormGroupT;\n    values: Record<string, string>;\n    fields: Record<string, FieldT>;\n    node: GetNode_latest_published;\n  }) => JSX.Element\n> = {\n  \"content-compliance\": ({ group, values }) => {\n    return (\n      <div className=\"mb-lg-5\">\n        <FormGroupTitle title={group.title} />\n        <p className=\"w-paragraph\">\n          {getComplianceString(\n            values[\"compliance-status\"],\n            values[\"device-type\"] === \"website\"\n          )}\n        </p>\n      </div>\n    );\n  },\n  \"content-not-accessible\": ({ group, values, fields }) => {\n    const accessibilityFields: ReadonlyArray<any> = [\n      \"reason-42004\",\n      \"reason-disproportionate-burden\",\n      \"reason-no-law\"\n    ];\n    const hasInaccessibleContent = accessibilityFields\n      .map(fieldName => values[fieldName])\n      .some(_ => _);\n    return (\n      <div className=\"mb-lg-5\">\n        <FormGroupTitle title={group.title} />\n        {hasInaccessibleContent && (\n          <p className=\"w-paragraph\">\n            I contenuti di seguito elencati non sono accessibili per i seguenti\n            motivi:\n          </p>\n        )}\n        {accessibilityFields.map(\n          fieldName =>\n            values[fieldName] && (\n              <div key={fieldName} className=\"mb-4\">\n                <p className=\"w-paragraph font-weight-bold neutral-2-color-b5 mb-2\">\n                  {fields[fieldName].title}\n                </p>\n                <p className=\"w-paragraph pl-lg-4\">\n                  {values[`${fieldName}-text`]}\n                </p>\n              </div>\n            )\n        )}\n      </div>\n    );\n  },\n  \"content-alt\": ({ group, values }) =>\n    values[\"accessible-alternatives\"] ? (\n      <div className=\"mb-lg-5\">\n        <FormGroupTitle title={group.title} />\n        <p className=\"w-paragraph\">{values[\"accessible-alternatives\"]}</p>\n      </div>\n    ) : (\n      <></>\n    ),\n  \"content-methodology\": ({ group, values, fields, node }) => {\n    return (\n      <div className=\"mb-lg-5\">\n        <FormGroupTitle title={group.title} />\n        <p className=\"w-paragraph\">\n          La dichiarazione è stata effettuata utilizzando{\" \"}\n          <strong>\n            {getSelectedLabel(fields.methodology, values.methodology)}\n          </strong>{\" \"}\n          {values[\"methodology-details\"] && \"mediante\"}{\" \"}\n          <strong>\n            {getSelectedLabel(\n              fields[\"methodology-details\"],\n              values[\"methodology-details\"]\n            )}\n          </strong>{\" \"}\n          e aggiornata il {format(node.updated_at, \"DD.MM.YYYY\")} a seguito di\n          una revisione sostanziale{\" \"}\n          {values[\"device-type\"] === \"website\"\n            ? \"del sito web\"\n            : \"dell'applicazione mobile\"}\n          .\n        </p>\n      </div>\n    );\n  },\n  \"feedback-and-contacts\": ViewGroup,\n  \"implementation-procedure\": ViewGroup,\n  \"application-information\": InlineViewGroup,\n  \"application-org\": InlineViewGroup,\n  \"application-manager\": ({ group, values, fields }) => {\n    return (\n      <div className=\"mb-lg-5\">\n        <FormGroupTitle title={group.title} />\n        <p className=\"w-paragraph\">\n          {group.title}{\" \"}\n          <strong>\n            {values[\"manager-present\"] ? \"\" : \"non\"}{\" \"}\n            {fields[\"manager-present\"].title}\n          </strong>{\" \"}\n          e{values[\"manager-appointed\"] ? \"d\" : \"\"}\n          <strong>\n            {values[\"manager-appointed\"] ? \"\" : \" non\"}{\" \"}\n            {fields[\"manager-appointed\"].title}\n          </strong>\n        </p>\n      </div>\n    );\n  }\n};\n\nconst PublishModal = ({ nodeLink }: { nodeLink: string }) => {\n  const [isOpen, setIsOpen] = useState(true);\n  return (\n    <Modal isOpen={isOpen} toggle={() => setIsOpen(!isOpen)}>\n      <ModalHeader toggle={() => setIsOpen(!isOpen)} tag=\"h2\" className=\"px-5\">\n        Copia e incolla il link\n      </ModalHeader>\n      <ModalBody className=\"px-5 pb-5\">\n        <p className=\"pb-4\" style={{ borderBottom: \"1px solid #ccc\" }}>\n          Copia e incolla - il link in calce - nel footer del tuo sito web.{\" \"}\n          <br /> A seguito di questa operazione verrà effettuata una verifica\n          automatica.\n        </p>\n        <p className=\"font-weight-bold pt-4\">\n          <a href={nodeLink}>{nodeLink}</a>\n        </p>\n      </ModalBody>\n    </Modal>\n  );\n};\n\nconst PublishCta = ({\n  nodeId,\n  nodeVersion\n}: {\n  nodeId: number;\n  nodeVersion: number;\n}) => {\n  const [nodeLink, setNodeLink] = useState();\n  return (\n    <Mutation<PublishNode, PublishNodeVariables>\n      mutation={PUBLISH_NODE}\n      refetchQueries={[\n        {\n          query: GET_LATEST_NODE_WITH_PUBLISHED,\n          variables: { id: nodeId }\n        }\n      ]}\n      onCompleted={publishedNode => {\n        if (typeof window !== `undefined`) {\n          // TODO: set from siteConfig.hostName\n          setNodeLink(\n            `https://${window.location.hostname}/view/${\n              publishedNode.update_node!.returning[0].id\n            }`\n          );\n        }\n      }}\n    >\n      {(publishNode, { loading: publishLoading, error: publishError }) => {\n        if (publishLoading) {\n          return (\n            <p>\n              <Trans i18nKey=\"sending_data\" />\n            </p>\n          );\n        }\n        if (publishError) {\n          return (\n            <p className=\"text-danger\">\n              <Trans i18nKey=\"errors.error_sending_data\" />\n              <br />\n              <ApolloErrors errors={publishError} />\n            </p>\n          );\n        }\n        return nodeLink ? (\n          <PublishModal nodeLink={nodeLink} />\n        ) : (\n          <Button\n            color=\"primary\"\n            onClick={() =>\n              publishNode({\n                variables: {\n                  id: nodeId,\n                  version: nodeVersion + 1\n                }\n              })\n            }\n          >\n            <Trans i18nKey=\"publish_node\" />\n          </Button>\n        );\n      }}\n    </Mutation>\n  );\n};\n\nconst Template = ({\n  fields,\n  form,\n  node,\n  values\n}: {\n  fields: Record<string, FieldT>;\n  form: FormT;\n  node: GetNode_latest_published;\n  values: Record<string, string>;\n}) => {\n  return (\n    <div className=\"px-lg-5 py-lg-4\">\n      <p className=\"w-paragraph neutral-2-color-b5\">\n        redatta il {format(node.updated_at, \"DD.MM.YYYY\")}\n      </p>\n      {form.sections!.map(section => {\n        if (!section) {\n          return null;\n        }\n        return (\n          <div key={section.name || \"\"} className=\"view-section\">\n            {section.title && (\n              <h2 className=\"h3 mb-2 mb-lg-4\">{section.title}</h2>\n            )}\n\n            {section.name === \"section-0\" && (\n              <p className=\"w-paragraph neutral-2-color-b5 pb-5\">\n                <strong>\n                  {get(\n                    node,\n                    n => n.node_revision_group.group_ipa_pa.des_amm,\n                    \"\"\n                  )}\n                </strong>{\" \"}\n                si impegna a rendere{\" \"}\n                <strong>\n                  {values[\"device-type\"] === \"website\"\n                    ? \"il sito web\"\n                    : \"l'applicazione mobile\"}{\" \"}\n                </strong>\n                “\n                <a\n                  href={\n                    values[\"device-type\"] === \"website\"\n                      ? values[\"website-url\"]\n                      : values[\"app-url\"]\n                  }\n                  className=\"font-weight-bold\"\n                >\n                  {values[\"device-type\"] === \"website\"\n                    ? values[\"website-name\"]\n                    : values[\"app-name\"]}\n                </a>\n                ” accessibile, conformemente alla normativa nazionale che ha\n                recepito la direttiva (UE) 2016/2102 del Parlamento europeo e\n                del Consiglio. La presente dichiarazione di accessibilità si\n                applica a siti web e applicazioni mobile omnis voluptas\n                assumenda est, omnis dolor repellendus.\n              </p>\n            )}\n\n            {section.name !== \"section-0\" && section.description && (\n              <p className=\"w-paragraph neutral-1-color-b6\">\n                {section.description}\n              </p>\n            )}\n\n            {section.groups!.map(group => {\n              const GroupEl =\n                group && group.name ? Groups[group.name] : undefined;\n              return group && group.name && GroupEl ? (\n                <GroupEl\n                  group={group}\n                  values={values}\n                  fields={fields}\n                  node={node}\n                  key={group.name}\n                />\n              ) : null;\n            })}\n          </div>\n        );\n      })}\n      {node.status !== \"published\" && (\n        <PublishCta nodeId={node.id} nodeVersion={node.version} />\n      )}\n    </div>\n  );\n};\n\nexport default Template;\n"],"sourceRoot":""}