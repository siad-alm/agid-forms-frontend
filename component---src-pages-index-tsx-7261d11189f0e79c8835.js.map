{"version":3,"sources":["webpack:///./src/pages/index.tsx","webpack:///./src/utils/strings.ts","webpack:///./src/icons/icons.svg","webpack:///./src/graphql/gatsby.ts","webpack:///./src/components/Icon.tsx","webpack:///./src/components/Footer.tsx","webpack:///./src/components/MegaMenu.tsx","webpack:///./src/components/MainHeader.tsx","webpack:///./src/components/SlimHeader.tsx","webpack:///./src/components/Layout.tsx","webpack:///./src/components/Seo.tsx","webpack:///./src/graphql/hasura.ts","webpack:///./src/components/FieldDescription.tsx","webpack:///./src/components/FormGroup.tsx","webpack:///./src/components/ApolloErrors.tsx","webpack:///./src/utils/safe_access.ts"],"names":["SecretSelectionComponent","_ref","setHasSecret","react","Form","className","FormGroup","fieldName","isHidden","Input","name","type","id","onChange","Label","check","for","es","i18nKey","GetSecretComponent","_ref2","ipaData","t","useTranslation","_useState","useState","agree","setAgree","react_apollo_esm","mutation","GET_SECRET","getSecret","_ref3","mutationLoading","loading","mutationError","error","getSecretData","data","ApolloErrors","errors","hasRtd","ipa_ou","mail_resp","DUMB_IPA_VALUE_FOR_NULL","post_auth_email_ipa_code","checked","htmlFor","onClick","style","maxWidth","paName","ipa_pa","des_amm","email","Button","disabled","color","_asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","variables","ipa_code","cod_amm","body","t0","sent","abrupt","stop","href","GetSecretConnectedComponent","_ref5","selectedPa","query","GET_IPA","value","_ref6","JSON","stringify","pages_GetSecretComponent","getIpaOptions","concat","search_ipa","map","pa","label","Comune","join","PaSelectionComponent","_ref7","setSelectedPa","setSearch","react_select_browser_esm","placeholder","cacheOptions","defaultOptions","isLoading","options","split","onInputChange","FieldDescription","description","SelectOrganizationConnectedComponent","_ref8","_useState2","search","searchDebounced","useDebounce","SEARCH_IPA","_ref9","pages_PaSelectionComponent","pages_SecretSelectionComponent","LoginButtonComponent","_ref10","secret","setSecret","getTokens","evt","target","LoginButtonConnectedComponent","_ref11","onStoreTokens","GET_TOKENS","_ref12","getTokensData","isTooManyRequestError","pages_LoginButtonComponent","IndexPage","_ref13","_useState3","_useState4","_useState5","hasSecret","siteConfig","getSiteConfig","isLoggedIn","navigate","homepage","s","isSessionExpired","window","location","indexOf","Layout","menu","getMenu","title","Seo","charAt","toUpperCase","slice","pages_SelectOrganizationConnectedComponent","pages_GetSecretConnectedComponent","pages_LoginButtonConnectedComponent","tokens","storeTokens","post_auth_login_ipa_code","backend_token","graphql_token","storeSessionInfo","userId","user","userEmail","organizationName","organizationCode","get","module","exports","__webpack_require__","p","d","__webpack_exports__","getForm","Array","isArray","edges","node","formId","forms","allFormYaml","filter","Icon","icon","props","_objectWithoutPropertiesLoose","Object","assign","classNames","xlinkHref","Icons","Footer","footerLinks","socialLinks","author","authorLogo","authorUrl","Footer_objectWithoutPropertiesLoose","Container","Row","Col","xs","sm","md","src","alt","height","socialLink","url","key","aria-label","components_Icon","footerLink","gatsby_browser_entry","to","dropdownModifiers","isOffcanvasOpen","relativePosition","enabled","fn","styles","position","transform","borderRadius","animationDuration","MegaMenu","_React$useState","React","setIsOffcanvasOpen","_React$useState2","isDropdownOpen","setIsDropdownOpen","aria-controls","aria-expanded","CSSTransition","in","timeout","enter","exit","enterDone","exitDone","menuItem","userHasAnyRole","roles","subtree","Dropdown","slug","tag","isOpen","toggle","_setIsDropdownOpen","DropdownToggle","caret","activeClassName","role","cursor","fill","DropdownMenu","modifiers","item","DropdownItem","MainHeader","organization","components_MegaMenu","flip","shift","preventOverflow","boundariesElement","SlimHeader","owners","slimHeaderLinks","languages","onLogout","i18n","isLanguageDropdownOpen","setIsLanguageDropdownOpen","isUserDropdownOpen","setIsUserDropdownOpen","_React$useState3","isLinksDropdownOpen","setIsLinksDropdownOpen","owner","e","preventDefault","slimHeaderLink","language","lang","changeLanguage","marginRight","require","children","sessionInfo","getSessionInfo","components_SlimHeader","logout","GraphqlClient","components_MainHeader","components_Footer","react__WEBPACK_IMPORTED_MODULE_0__","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","n","SEO","_ref$lang","_ref$meta","meta","keywords","htmlAttributes","content","property","gql","_templateObject","_templateObject2","NodeFragment","_templateObject3","NodeRevisionFragment","_templateObject4","UPSERT_NODE","_templateObject5","PUBLISH_NODE","_templateObject6","GET_LATEST_NODE_WITH_PUBLISHED","_templateObject7","GET_NODE_REVISION_WITH_PUBLISHED","_templateObject8","GET_USER_NODES","_templateObject9","_templateObject10","reactstrap__WEBPACK_IMPORTED_MODULE_1__","hidden","react_i18next__WEBPACK_IMPORTED_MODULE_1__","_utils_errors__WEBPACK_IMPORTED_MODULE_2__","getErrorString","translate","errorString","obj","defaultValue","excludeNull","result","ret","undefined","err"],"mappings":"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","file":"component---src-pages-index-tsx-7261d11189f0e79c8835.js","sourcesContent":["import * as React from \"react\";\nimport { useState } from \"react\";\nimport Layout from \"../components/Layout\";\nimport SEO from \"../components/Seo\";\n\nimport { graphql, navigate } from \"gatsby\";\n\nimport {\n  getMenu,\n  getSiteConfig,\n  // @ts-ignore\n  PageConfigFragment\n} from \"../graphql/gatsby\";\n\nimport { Button, Form, Input, Label } from \"reactstrap\";\nimport { FormGroup } from \"../components/FormGroup\";\nimport { SearchIpa, SearchIpaVariables } from \"../generated/graphql/SearchIpa\";\nimport { GET_SECRET, GET_TOKENS } from \"../graphql/backend\";\nimport { GET_IPA, SEARCH_IPA } from \"../graphql/hasura\";\nimport { capitalizeFirst } from \"../utils/strings\";\n\nimport { Mutation, MutationFn, Query } from \"react-apollo\";\n\nimport SelectBase from \"react-select\";\nimport { useDebounce } from \"use-debounce\";\n\nimport { GetIpa, GetIpaVariables } from \"../generated/graphql/GetIpa\";\n\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { ValueType } from \"react-select/lib/types\";\nimport ApolloErrors from \"../components/ApolloErrors\";\nimport { FieldDescription } from \"../components/FieldDescription\";\nimport { DUMB_IPA_VALUE_FOR_NULL } from \"../config\";\nimport { PageConfig } from \"../generated/graphql/PageConfig\";\nimport {\n  PostAuthEmailIpaCode,\n  PostAuthEmailIpaCodeVariables\n} from \"../generated/graphql/PostAuthEmailIpaCode\";\nimport {\n  PostAuthLoginIpaCode,\n  PostAuthLoginIpaCodeVariables\n} from \"../generated/graphql/PostAuthLoginIpaCode\";\nimport { isLoggedIn, storeSessionInfo, storeTokens } from \"../utils/auth\";\nimport { isTooManyRequestError } from \"../utils/errors\";\nimport { get } from \"../utils/safe_access\";\n\ntype Dispatcher<T> = React.Dispatch<React.SetStateAction<T>>;\n\ntype SelectedValueT = { value: string; label: string };\n\nconst SecretSelectionComponent = ({\n  setHasSecret\n}: {\n  setHasSecret: Dispatcher<boolean | undefined>;\n}) => (\n  <Form className=\"my-4\">\n    <FormGroup fieldName=\"secret-selection\" isHidden={false}>\n      <Input\n        name=\"secret-selection\"\n        type=\"radio\"\n        id=\"secret-selection-1\"\n        onChange={() => setHasSecret(true)}\n      />\n      <Label check={true} for=\"secret-selection-1\">\n        <Trans i18nKey=\"auth.has_password\" />\n      </Label>\n    </FormGroup>\n    <FormGroup fieldName=\"secret-selection\" isHidden={false}>\n      <Input\n        name=\"secret-selection\"\n        type=\"radio\"\n        id=\"secret-selection-2\"\n        onChange={() => setHasSecret(false)}\n      />\n      <Label check={true} for=\"secret-selection-2\">\n        <Trans i18nKey=\"auth.not_has_password\" />\n      </Label>\n    </FormGroup>\n  </Form>\n);\n\nconst GetSecretComponent = ({ ipaData }: { ipaData?: GetIpa }) => {\n  const { t } = useTranslation();\n  const [agree, setAgree] = useState(false);\n\n  return (\n    <Mutation<PostAuthEmailIpaCode, PostAuthEmailIpaCodeVariables>\n      mutation={GET_SECRET}\n    >\n      {(\n        getSecret,\n        { loading: mutationLoading, error: mutationError, data: getSecretData }\n      ) => {\n        if (mutationLoading) {\n          return (\n            <p>\n              <Trans i18nKey=\"sending_data\" />\n            </p>\n          );\n        } else if (mutationError) {\n          return (\n            <p className=\"text-danger\">\n              <Trans i18nKey=\"errors.error_sending_data\" />\n              <br />\n              <ApolloErrors errors={mutationError} />\n            </p>\n          );\n        }\n\n        const hasRtd =\n          ipaData &&\n          ipaData.ipa_ou &&\n          ipaData.ipa_ou[0] &&\n          ipaData.ipa_ou[0].mail_resp &&\n          ipaData.ipa_ou[0].mail_resp !== \"null\" &&\n          ipaData.ipa_ou[0].mail_resp !== DUMB_IPA_VALUE_FOR_NULL;\n\n        return getSecretData ? (\n          <p>\n            <Trans i18nKey=\"auth.email_sent\" />{\" \"}\n            {getSecretData.post_auth_email_ipa_code.ipa_ou.mail_resp}\n          </p>\n        ) : (\n          <>\n            {hasRtd && (\n              <>\n                <FormGroup isHidden={false} fieldName=\"agree\">\n                  <Input type=\"checkbox\" name=\"agree\" checked={agree} />\n                  <Label\n                    htmlFor=\"agree\"\n                    onClick={() => setAgree(!agree)}\n                    className=\"font-size-xs\"\n                    style={{ maxWidth: \"30em\" }}\n                  >\n                    {t(\"auth.email_to_be_sent\", {\n                      paName: ipaData!.ipa_pa[0].des_amm,\n                      email: ipaData!.ipa_ou[0].mail_resp\n                    })}\n                  </Label>\n                </FormGroup>\n                <Button\n                  disabled={!agree}\n                  className=\"mb-3\"\n                  color=\"primary\"\n                  onClick={async () =>\n                    ipaData && ipaData.ipa_pa[0]\n                      ? await getSecret({\n                          variables: {\n                            ipa_code: ipaData.ipa_pa[0].cod_amm,\n                            body: \"{}\"\n                          }\n                        })\n                      : () => ({})\n                  }\n                >\n                  Invia l'email\n                </Button>\n              </>\n            )}\n            {!hasRtd && (\n              <p className=\"text-warning\">\n                <Trans i18nKey=\"auth.rtd_not_found\" />\n                <br />\n                <a\n                  href={`https://indicepa.gov.it/ricerca/n-dettaglioamministrazione.php?cod_amm=${\n                    ipaData!.ipa_pa[0].cod_amm\n                  }`}\n                >\n                  {ipaData!.ipa_pa[0].des_amm}\n                </a>\n              </p>\n            )}\n          </>\n        );\n      }}\n    </Mutation>\n  );\n};\n\nconst GetSecretConnectedComponent = ({\n  selectedPa\n}: {\n  selectedPa?: SelectedValueT;\n}) => (\n  <Query<GetIpa, GetIpaVariables>\n    query={GET_IPA}\n    variables={{ ipa_code: selectedPa ? selectedPa.value : \"\" }}\n  >\n    {({ loading, error, data: ipaData }) => {\n      if (loading) {\n        return (\n          <p>\n            <Trans i18nKey=\"loading_data\" />\n          </p>\n        );\n      } else if (error) {\n        return (\n          <p>\n            <Trans i18nKey=\"errors.error_getting_data\" />:{\" \"}\n            {JSON.stringify(error)}\n          </p>\n        );\n      } else {\n        return <GetSecretComponent ipaData={ipaData} />;\n      }\n    }}\n  </Query>\n);\n\nconst getIpaOptions = (ipaData: SearchIpa | undefined) =>\n  ipaData && ipaData.ipa_pa\n    ? ipaData.ipa_pa.concat(ipaData.search_ipa || []).map(pa => ({\n        value: pa.cod_amm,\n        label: [pa.des_amm, pa.Comune, pa.cod_amm].join(\", \")\n      }))\n    : [];\n\nconst PaSelectionComponent = ({\n  loading,\n  ipaData,\n  setSelectedPa,\n  setSearch\n}: {\n  loading: boolean;\n  ipaData?: SearchIpa;\n  setSelectedPa: Dispatcher<SelectedValueT | undefined>;\n  setSearch: Dispatcher<string>;\n}) => {\n  const { t } = useTranslation();\n  return (\n    <FormGroup isHidden={false} fieldName=\"pa\">\n      <Label\n        for=\"pa\"\n        check={true}\n        className=\"d-block font-weight-semibold neutral-2-color-a4 font-size-xs\"\n      >\n        <Trans i18nKey=\"auth.select_pa\" />\n      </Label>\n\n      <SelectBase<SelectedValueT>\n        name=\"pa\"\n        className=\"react-select\"\n        placeholder=\"Amministrazione...\"\n        cacheOptions={true}\n        defaultOptions={[]}\n        isLoading={loading}\n        options={loading ? [] : getIpaOptions(ipaData)}\n        onChange={(value: ValueType<SelectedValueT>) => {\n          if (value) {\n            // this cast is needed because a wrong array type is inferred\n            setSelectedPa({\n              label: (value as SelectedValueT).label.split(\",\")[0],\n              value: (value as SelectedValueT).value\n            });\n          }\n        }}\n        onInputChange={(value: string) => setSearch(value)}\n      />\n      <FieldDescription description={t(\"auth.select_pa_hint\")} />\n    </FormGroup>\n  );\n};\n\nconst SelectOrganizationConnectedComponent = ({\n  setSelectedPa,\n  setHasSecret,\n  selectedPa\n}: {\n  setSelectedPa: Dispatcher<SelectedValueT | undefined>;\n  setHasSecret: Dispatcher<boolean | undefined>;\n  selectedPa?: SelectedValueT;\n}) => {\n  const [search, setSearch] = useState<string>(\"\");\n  const [searchDebounced] = useDebounce(search, 400);\n\n  return (\n    <Query<SearchIpa, SearchIpaVariables>\n      query={SEARCH_IPA}\n      variables={{ search: searchDebounced }}\n    >\n      {({ loading, error, data: ipaData }) => {\n        if (error) {\n          return (\n            <p className=\"text-warning\">\n              <Trans i18nKey=\"errors.error_getting_data\" />:{\" \"}\n              {JSON.stringify(error)}\n            </p>\n          );\n        }\n        return (\n          <>\n            <PaSelectionComponent\n              ipaData={ipaData}\n              loading={loading}\n              setSearch={setSearch}\n              setSelectedPa={setSelectedPa}\n            />\n            {selectedPa && (\n              <SecretSelectionComponent setHasSecret={setHasSecret} />\n            )}\n          </>\n        );\n      }}\n    </Query>\n  );\n};\n\nconst LoginButtonComponent = ({\n  secret,\n  setSecret,\n  selectedPa,\n  getTokens\n}: {\n  secret?: string;\n  setSecret: Dispatcher<string | undefined>;\n  selectedPa: SelectedValueT;\n  getTokens: MutationFn<PostAuthLoginIpaCode, PostAuthLoginIpaCodeVariables>;\n}) => {\n  const { t } = useTranslation();\n  return (\n    <div>\n      <label htmlFor=\"secret\">\n        <Trans i18nKey=\"auth.insert_secret\" />\n      </label>\n      <Input\n        type=\"text\"\n        name=\"secret\"\n        value={secret || \"\"}\n        onChange={evt => setSecret(evt.target.value)}\n      />\n      <br />\n      <Button\n        color=\"primary\"\n        onClick={() =>\n          getTokens({\n            variables: {\n              ipa_code: selectedPa.value,\n              body: {\n                secret: secret || \"\"\n              }\n            }\n          })\n        }\n      >\n        {t(\"auth.login_as\", { selectedPa: selectedPa.label })}\n      </Button>\n    </div>\n  );\n};\n\nconst LoginButtonConnectedComponent = ({\n  secret,\n  setSecret,\n  selectedPa,\n  onStoreTokens\n}: {\n  secret?: string;\n  setSecret: Dispatcher<string | undefined>;\n  selectedPa: SelectedValueT;\n  onStoreTokens: (data: PostAuthLoginIpaCode) => void;\n}) => (\n  <Mutation<PostAuthLoginIpaCode, PostAuthLoginIpaCodeVariables>\n    mutation={GET_TOKENS}\n  >\n    {(\n      getTokens,\n      { loading: mutationLoading, error: mutationError, data: getTokensData }\n    ) => {\n      if (mutationLoading) {\n        return (\n          <p>\n            <Trans i18nKey=\"sending_data\" />\n          </p>\n        );\n      } else if (getTokensData) {\n        onStoreTokens(getTokensData);\n      }\n      return (\n        <>\n          {mutationError && (\n            <p className=\"text-danger\">\n              {isTooManyRequestError(mutationError) ? (\n                <ApolloErrors errors={mutationError} />\n              ) : (\n                <span>\n                  <Trans i18nKey=\"auth.wrong_password\" />\n                </span>\n              )}\n            </p>\n          )}\n          <LoginButtonComponent\n            getTokens={getTokens}\n            secret={secret}\n            selectedPa={selectedPa}\n            setSecret={setSecret}\n          />\n        </>\n      );\n    }}\n  </Mutation>\n);\n\nconst IndexPage = ({ data }: { data: PageConfig }) => {\n  const { t } = useTranslation();\n  const [selectedPa, setSelectedPa] = useState<SelectedValueT>();\n  const [secret, setSecret] = useState<string>();\n  const [hasSecret, setHasSecret] = useState<boolean>();\n\n  const siteConfig = getSiteConfig(data);\n\n  if (isLoggedIn()) {\n    navigate(siteConfig && siteConfig.homepage ? siteConfig.homepage : \"/\");\n    return null;\n  }\n\n  const isSessionExpired =\n    typeof window !== \"undefined\" &&\n    window.location.search.indexOf(\"session-expired\") !== -1;\n\n  return (\n    <Layout\n      menu={getMenu(data)}\n      siteConfig={siteConfig}\n      title={t(\"pages.index_page_title\")}\n    >\n      <SEO title={t(\"pages.index_page_title\")} siteConfig={siteConfig} />\n      {isSessionExpired && (\n        <p className=\"alert alert-warning w-100\">\n          <Trans i18nKey=\"auth.expired_session\" />\n        </p>\n      )}\n      <div>\n        <h2>{capitalizeFirst(t(\"login\"))}</h2>\n        <SelectOrganizationConnectedComponent\n          selectedPa={selectedPa}\n          setHasSecret={setHasSecret}\n          setSelectedPa={setSelectedPa}\n        />\n        {false === hasSecret && (\n          <GetSecretConnectedComponent selectedPa={selectedPa} />\n        )}\n        {selectedPa && hasSecret && (\n          <LoginButtonConnectedComponent\n            secret={secret}\n            selectedPa={selectedPa}\n            setSecret={setSecret}\n            onStoreTokens={tokens => {\n              storeTokens(\n                tokens.post_auth_login_ipa_code.backend_token,\n                tokens.post_auth_login_ipa_code.graphql_token\n              );\n              storeSessionInfo({\n                userId: tokens.post_auth_login_ipa_code.user.id,\n                userEmail: tokens.post_auth_login_ipa_code.user.email,\n                organizationName: selectedPa.label,\n                organizationCode: selectedPa.value\n              });\n              navigate(get(siteConfig, s => s.homepage, \"\"));\n            }}\n          />\n        )}\n      </div>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query PageConfig {\n    menu: allConfigYaml(\n      filter: { menu: { elemMatch: { name: { ne: null } } } }\n    ) {\n      ...PageConfigFragment\n    }\n    siteConfig: allConfigYaml(filter: { title: { ne: null } }) {\n      ...SiteConfigFragment\n    }\n  }\n`;\n\nexport default IndexPage;\n","export function capitalizeFirst(s: string) {\n  return s.charAt(0).toUpperCase() + s.slice(1);\n}\n","module.exports = __webpack_public_path__ + \"static/icons-6642dbab43a8aaf04fc37cc89429ceb5.svg\";","import { graphql } from \"gatsby\";\nimport { FormConfig } from \"../generated/graphql/FormConfig\";\nimport {\n  PageConfig,\n  PageConfig_menu_edges_node_menu,\n  PageConfig_siteConfig_edges_node\n} from \"../generated/graphql/PageConfig\";\nimport { ViewConfig } from \"../generated/graphql/ViewConfig\";\nimport { FormT } from \"../utils/forms\";\n\nexport const FormSchemaFragment = graphql`\n  fragment FormSchemaFragment on FormYamlConnection {\n    edges {\n      node {\n        id\n        name\n        version\n        language\n        enabled\n        slug_pattern\n        title_pattern\n        sections {\n          title\n          name\n          description\n          groups {\n            name\n            title\n            description\n            repeatable\n            fields {\n              default\n              default_checked\n              default_multiple_selection\n              description\n              name\n              multiple\n              title\n              widget\n              show_if\n              valid_if\n              required_if\n              error_msg\n              computed_value\n              options {\n                value\n                label\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const PageConfigFragment = graphql`\n  fragment PageConfigFragment on ConfigYamlConnection {\n    edges {\n      node {\n        menu {\n          name\n          slug\n          roles\n        }\n      }\n    }\n  }\n`;\n\nexport const getMenu = (\n  data: PageConfig\n): ReadonlyArray<PageConfig_menu_edges_node_menu | null> | null =>\n  data.menu && Array.isArray(data.menu.edges) && data.menu.edges[0]\n    ? data.menu.edges[0].node.menu\n    : null;\n\nexport const getSiteConfig = (\n  data: PageConfig\n): PageConfig_siteConfig_edges_node | null =>\n  data.siteConfig &&\n  Array.isArray(data.siteConfig.edges) &&\n  data.siteConfig.edges[0]\n    ? data.siteConfig.edges[0].node\n    : null;\n\nexport function getForm(\n  data: FormConfig | ViewConfig,\n  formId?: string\n): FormT | null {\n  if (!formId) {\n    return null;\n  }\n  const forms = data.allFormYaml\n    ? data.allFormYaml.edges.filter(node => node.node.id === formId)\n    : null;\n  if (!forms || !forms[0] || !forms[0].node) {\n    return null;\n  }\n  return forms[0].node;\n}\n\nexport const SiteConfigFragment = graphql`\n  fragment SiteConfigFragment on ConfigYamlConnection {\n    edges {\n      node {\n        title\n        description\n        defaultLanguage\n        author\n        authorLogo\n        authorUrl\n        homepage\n        owners {\n          name\n          url\n        }\n        languages {\n          name\n        }\n        slimHeaderLinks {\n          name\n          url\n        }\n        socialLinks {\n          name\n          url\n          icon\n        }\n        footerLinks {\n          name\n          url\n        }\n      }\n    }\n  }\n`;\n","import classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport Icons from \"../icons/icons.svg\";\n\ntype IconProps = { className?: string; icon: string } & React.SVGProps<\n  SVGSVGElement\n>;\n\nconst Icon = ({ className, icon, ...props }: IconProps) => (\n  <svg className={classNames(\"icon\", className)} {...props}>\n    <use xlinkHref={`${Icons}#it-${icon}`} />\n  </svg>\n);\n\nexport default Icon;\n","import { Link } from \"gatsby\";\nimport * as React from \"react\";\nimport { Col, Container, Row } from \"reactstrap\";\n\nimport { Trans } from \"react-i18next\";\nimport { getSiteConfig } from \"../graphql/gatsby\";\nimport Icon from \"./Icon\";\n\ntype FooterProps = Pick<\n  NonNullable<ReturnType<typeof getSiteConfig>>,\n  // tslint:disable-next-line: max-union-size\n  \"footerLinks\" | \"socialLinks\" | \"author\" | \"authorLogo\" | \"authorUrl\"\n> & { id: string };\n\nconst Footer = ({\n  footerLinks,\n  socialLinks,\n  author,\n  authorLogo,\n  authorUrl,\n  ...props\n}: FooterProps) => (\n  <footer className=\"neutral-1-bg-a9\" {...props}>\n    <Container>\n      <Row className=\"py-4\">\n        <Col xs=\"12\" sm=\"6\" md=\"4\">\n          <div className=\"px-2 py-3\">\n            <a href={authorUrl || \"\"} target=\"_blank\">\n              <img\n                src={authorLogo || \"\"}\n                alt={author || \"\"}\n                height=\"36\"\n                style={{ maxWidth: `100%` }}\n              />\n            </a>\n          </div>\n        </Col>\n        <Col xs=\"12\" sm=\"6\" md=\"4\" className=\"d-flex\">\n          <div className=\"px-2 py-2\" />\n        </Col>\n        <Col xs=\"12\" sm=\"6\" md=\"4\" className=\"text-white text-right pt-2\">\n          <span>\n            <Trans i18nKey=\"follow_us\" />\n          </span>\n          {(socialLinks || []).map(\n            socialLink =>\n              socialLink &&\n              socialLink.icon &&\n              socialLink.name &&\n              socialLink.url && (\n                <a\n                  className=\"text-white p-2\"\n                  key={socialLink.icon}\n                  href={socialLink.url}\n                  aria-label={socialLink.name}\n                >\n                  <Icon\n                    icon={socialLink.icon}\n                    className=\"icon-sm icon-light align-top\"\n                  />\n                </a>\n              )\n          )}\n        </Col>\n      </Row>\n      <Row className=\"py-4 border-white border-top\">\n        <ul className=\"col list-inline small\">\n          {(footerLinks || []).map(\n            footerLink =>\n              footerLink &&\n              footerLink.name &&\n              footerLink.url && (\n                <li key={footerLink.name} className=\"list-inline-item px-1\">\n                  <Link\n                    className=\"small-prints font-weight-bold\"\n                    style={{ color: \"#0bd9d2\" }}\n                    to={footerLink.url}\n                  >\n                    {footerLink.name}\n                  </Link>\n                </li>\n              )\n          )}\n        </ul>\n      </Row>\n    </Container>\n  </footer>\n);\n\nexport default Footer;\n","import { Link } from \"gatsby\";\nimport * as React from \"react\";\n\nimport { useTranslation } from \"react-i18next\";\nimport { CSSTransition } from \"react-transition-group\";\nimport {\n  Dropdown,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle\n} from \"reactstrap\";\nimport { getMenu } from \"../graphql/gatsby\";\nimport { getSessionInfo, userHasAnyRole } from \"../utils/auth\";\nimport Icon from \"./Icon\";\n\ntype MegaMenuProps = {\n  menu: ReturnType<typeof getMenu>;\n  user: ReturnType<typeof getSessionInfo>;\n};\n\nconst BACKGROUND_COLOR = \"#ffffff\";\nconst FOREGROUND_COLOR = \"#455B71\";\n\nconst dropdownModifiers = (isOffcanvasOpen: boolean) => ({\n  relativePosition: {\n    enabled: true,\n    fn: (data: any) =>\n      isOffcanvasOpen\n        ? {\n            ...data,\n            styles: {\n              ...data.styles,\n              position: \"relative\",\n              transform: \"none\"\n            }\n          }\n        : {\n            ...data,\n            styles: {\n              ...data.styles,\n              borderRadius: \"4px\",\n              transform: \"translate3d(15px, 65px, 0px)\",\n              animationDuration: \"0.2s\"\n            }\n          }\n  }\n});\n\nexport const MegaMenu = ({ menu, user }: MegaMenuProps) => {\n  if (!menu) {\n    return null;\n  }\n  const [isOffcanvasOpen, setIsOffcanvasOpen] = React.useState(false);\n  const [isDropdownOpen, setIsDropdownOpen] = React.useState({} as Record<\n    string,\n    boolean\n  >);\n\n  const { t } = useTranslation();\n\n  return (\n    <nav className=\"navbar navbar-expand-lg has-megamenu\">\n      <button\n        className=\"custom-navbar-toggler\"\n        type=\"button\"\n        aria-controls=\"navbarNavC\"\n        aria-expanded={isOffcanvasOpen}\n        aria-label={t(\"toggle_navigation\")}\n        onClick={() => setIsOffcanvasOpen(!isOffcanvasOpen)}\n      >\n        <Icon className=\"icon icon-sm icon-light\" icon=\"burger\" />\n      </button>\n\n      <CSSTransition\n        in={isOffcanvasOpen}\n        timeout={{\n          enter: 1,\n          exit: 300\n        }}\n        classNames={{\n          enter: \"navbar-collapsable d-block\",\n          enterDone: \"navbar-collapsable d-block expanded\",\n          exit: \"navbar-collapsable d-block\",\n          exitDone: \"navbar-collapsable\"\n        }}\n      >\n        <div className={`navbar-collapsable`} id=\"navbarNavC\">\n          <div\n            className={`overlay ${isOffcanvasOpen ? \"d-block\" : \"d-none\"}`}\n            onClick={() => setIsOffcanvasOpen(!isOffcanvasOpen)}\n          />\n          <div className=\"close-div sr-only\">\n            <button\n              className=\"btn close-menu\"\n              type=\"button\"\n              onClick={() => setIsOffcanvasOpen(!isOffcanvasOpen)}\n            >\n              <Icon className=\"icon icon-sm icon-light\" icon=\"close\" />\n              {t(\"close\")}\n            </button>\n          </div>\n          <div className=\"menu-wrapper\">\n            <ul className=\"navbar-nav megamenu-top-links shadow-md mt-4\">\n              {menu.map(menuItem => {\n                return (\n                  menuItem &&\n                  menuItem.name &&\n                  userHasAnyRole(\n                    user,\n                    (menuItem.roles as ReadonlyArray<string>) || []\n                  ) &&\n                  // TODO: remove cast\n                  ((menuItem as any).subtree ? (\n                    <Dropdown\n                      key={menuItem.slug!}\n                      className=\"nav-item megamenu\"\n                      tag=\"li\"\n                      isOpen={isDropdownOpen[menuItem.slug!]}\n                      toggle={() =>\n                        setIsDropdownOpen({\n                          [menuItem.slug!]: isDropdownOpen[menuItem.slug!]\n                            ? !isDropdownOpen[menuItem.slug!]\n                            : true\n                        })\n                      }\n                    >\n                      <DropdownToggle\n                        caret={true}\n                        tag=\"a\"\n                        className=\"nav-link megamenu-top-link font-weight-600\"\n                        activeClassName=\"active\"\n                        role=\"button\"\n                        style={{\n                          cursor: \"pointer\"\n                        }}\n                      >\n                        {t(menuItem.name)}\n                        <Icon\n                          className=\"icon d-inline-block\"\n                          icon=\"expand\"\n                          style={{\n                            fill: !isOffcanvasOpen\n                              ? FOREGROUND_COLOR\n                              : BACKGROUND_COLOR\n                          }}\n                        />\n                      </DropdownToggle>\n                      <DropdownMenu\n                        modifiers={dropdownModifiers(isOffcanvasOpen)}\n                      >\n                        <div className=\"link-list-wrapper\">\n                          <ul className=\"mt-2\">\n                            {/* TODO: remove cast */}\n                            {(menuItem as any).subtree.map(\n                              (item: any) =>\n                                item &&\n                                item.slug && (\n                                  <DropdownItem\n                                    tag=\"li\"\n                                    key={item.slug}\n                                    className=\"p-0\"\n                                  >\n                                    <Link to={item.slug} className=\"p-0\">\n                                      {t(item.name)}\n                                    </Link>\n                                  </DropdownItem>\n                                )\n                            )}\n                          </ul>\n                        </div>\n                      </DropdownMenu>\n                    </Dropdown>\n                  ) : (\n                    userHasAnyRole(\n                      user,\n                      (menuItem.roles as ReadonlyArray<string>) || []\n                    ) && (\n                      <li className=\"nav-item megamenu\" key={menuItem.slug!}>\n                        <Link\n                          to={menuItem.slug!}\n                          className=\"nav-link megamenu-top-link font-weight-600\"\n                        >\n                          {t(menuItem.name)}\n                        </Link>\n                      </li>\n                    )\n                  ))\n                );\n              })}\n            </ul>\n          </div>\n        </div>\n      </CSSTransition>\n    </nav>\n  );\n};\n\nexport default MegaMenu;\n","import { Link } from \"gatsby\";\nimport * as React from \"react\";\n\nimport MegaMenu from \"./MegaMenu\";\n\nimport { getMenu, getSiteConfig } from \"../graphql/gatsby\";\nimport { getSessionInfo } from \"../utils/auth\";\nimport Icon from \"./Icon\";\n\ntype MainHeaderProps = Pick<\n  NonNullable<ReturnType<typeof getSiteConfig>>,\n  \"title\" | \"description\" | \"socialLinks\"\n> & {\n  menu: ReturnType<typeof getMenu>;\n  organization: string;\n  user: ReturnType<typeof getSessionInfo>;\n};\n\nconst MainHeader = ({\n  title,\n  description,\n  menu,\n  socialLinks,\n  organization,\n  user\n}: MainHeaderProps) => (\n  <>\n    <div className=\"it-nav-wrapper\">\n      <div className=\"it-header-center-wrapper it-small-header\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"it-header-center-content-wrapper\">\n                <div className=\"it-brand-wrapper\">\n                  <Link to=\"/\">\n                    {/* <Icon icon=\"code-circle\" /> */}\n                    <div className=\"it-brand-text\">\n                      <h2 className=\"no_toc\">{title}</h2>\n                      <h3 className=\"no_toc d-none d-md-block\">\n                        {description}\n                      </h3>\n                    </div>\n                  </Link>\n                </div>\n                <div className=\"it-right-zone\">\n                  <div className=\"d-none d-lg-block\">{organization}</div>\n                  <div className=\"it-socials d-none d-md-flex\">\n                    <ul>\n                      {(socialLinks || []).map(\n                        socialLink =>\n                          socialLink &&\n                          socialLink.name &&\n                          socialLink.url &&\n                          socialLink.icon && (\n                            <li key={socialLink.name}>\n                              <a\n                                href={socialLink.url}\n                                aria-label={socialLink.name}\n                              >\n                                <Icon icon={socialLink.icon} />\n                              </a>\n                            </li>\n                          )\n                      )}\n                    </ul>\n                  </div>\n                  <div className=\"it-search-wrapper\" />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"it-header-navbar-wrapper\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <MegaMenu menu={menu} user={user} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </>\n);\n\nexport default MainHeader;\n","import * as React from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport {\n  Dropdown,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle\n} from \"reactstrap\";\nimport { getSiteConfig } from \"../graphql/gatsby\";\nimport { getSessionInfo, isLoggedIn } from \"../utils/auth\";\nimport Icon from \"./Icon\";\n\nconst dropdownModifiers = {\n  flip: {\n    enabled: true\n  },\n  shift: {\n    enabled: true\n  },\n  preventOverflow: {\n    enabled: true,\n    boundariesElement: \"viewport\" as \"viewport\"\n  },\n  relativePosition: {\n    enabled: true,\n    fn: (data: any) => ({\n      ...data,\n      styles: {\n        ...data.styles,\n        borderRadius: \"4px\",\n        transform: \"translate3d(0px, 55px, 0px)\",\n        animationDuration: \"0.2s\"\n      }\n    })\n  }\n};\n\ntype SlimHeaderProps = Pick<\n  NonNullable<ReturnType<typeof getSiteConfig>>,\n  // tslint:disable-next-line: max-union-size\n  \"owners\" | \"slimHeaderLinks\" | \"languages\"\n> & { user: ReturnType<typeof getSessionInfo> } & {\n  onLogout: (args: any) => any;\n};\n\nexport const SlimHeader = ({\n  owners,\n  slimHeaderLinks,\n  languages,\n  user,\n  onLogout\n}: SlimHeaderProps) => {\n  const { i18n } = useTranslation();\n  const [isLanguageDropdownOpen, setIsLanguageDropdownOpen] = React.useState(\n    false\n  );\n  const [isUserDropdownOpen, setIsUserDropdownOpen] = React.useState(false);\n  const [isLinksDropdownOpen, setIsLinksDropdownOpen] = React.useState(false);\n  return (\n    <div className=\"it-header-slim-wrapper\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"it-header-slim-wrapper-content\">\n              {(owners || []).map(\n                owner =>\n                  owner &&\n                  owner.url && (\n                    <a\n                      className=\"d-none d-lg-block navbar-brand\"\n                      href={owner.url}\n                      key={owner.url}\n                      role=\"button\"\n                      aria-expanded=\"false\"\n                      aria-controls=\"header-links\"\n                    >\n                      <span>{owner.name}</span>\n                    </a>\n                  )\n              )}\n              <div className=\"nav-mobile\">\n                <nav>\n                  {(owners || []).map(\n                    owner =>\n                      owner &&\n                      owner.url && (\n                        <a\n                          className=\"d-lg-none it-opener collapsed\"\n                          href={owner.url}\n                          key={owner.url}\n                          role=\"button\"\n                          aria-expanded=\"false\"\n                          aria-controls=\"header-links\"\n                          onClick={e => {\n                            e.preventDefault();\n                            setIsLinksDropdownOpen(!isLinksDropdownOpen);\n                          }}\n                        >\n                          <span>{owner.name}</span>\n                          <Icon className=\"icon d-lg-none\" icon=\"expand\" />\n                        </a>\n                      )\n                  )}\n                  <div\n                    className={`link-list-wrapper collapse ${\n                      isLinksDropdownOpen ? \"show\" : \"\"\n                    }`}\n                    id=\"header-links\"\n                  >\n                    <ul className=\"link-list\">\n                      {(slimHeaderLinks || []).map(\n                        slimHeaderLink =>\n                          slimHeaderLink &&\n                          slimHeaderLink.name &&\n                          slimHeaderLink.url && (\n                            <li key={slimHeaderLink.name}>\n                              <a href={slimHeaderLink.url} className=\"px-3\">\n                                {slimHeaderLink.name}\n                              </a>\n                            </li>\n                          )\n                      )}\n                    </ul>\n                  </div>\n                </nav>\n              </div>\n              <div className=\"header-slim-right-zone\">\n                {languages && (\n                  <Dropdown\n                    className=\"nav-item\"\n                    isOpen={isLanguageDropdownOpen}\n                    toggle={() =>\n                      setIsLanguageDropdownOpen(!isLanguageDropdownOpen)\n                    }\n                  >\n                    <DropdownToggle\n                      caret={true}\n                      tag=\"a\"\n                      className=\"nav-link\"\n                      style={{\n                        cursor: \"pointer\"\n                      }}\n                    >\n                      {i18n.language}\n                      <Icon className=\"icon d-block\" icon=\"expand\" />\n                    </DropdownToggle>\n                    <DropdownMenu\n                      className=\"dropdown-menu\"\n                      modifiers={dropdownModifiers}\n                    >\n                      {(languages || []).map(\n                        lang =>\n                          lang &&\n                          lang.name && (\n                            <DropdownItem key={lang.name} tag=\"span\">\n                              <a\n                                role=\"button\"\n                                href=\"#\"\n                                className=\"list-item text-primary\"\n                                onClick={() => i18n.changeLanguage(lang.name!)}\n                              >\n                                <span>{lang.name}</span>\n                              </a>\n                            </DropdownItem>\n                          )\n                      )}\n                    </DropdownMenu>\n                  </Dropdown>\n                )}\n                <div className=\"it-access-top-wrapper\">\n                  {isLoggedIn() && user ? (\n                    <Dropdown\n                      isOpen={isUserDropdownOpen}\n                      toggle={() => setIsUserDropdownOpen(!isUserDropdownOpen)}\n                    >\n                      <DropdownToggle\n                        caret={true}\n                        tag=\"a\"\n                        className=\"bg-white text-primary font-weight-600 btn btn-xs px-3 text-decoration-none\"\n                        style={{\n                          cursor: \"pointer\",\n                          marginRight: \"-16px\"\n                        }}\n                      >\n                        <Icon\n                          className=\"icon d-block d-md-none text-primary\"\n                          style={{\n                            fill: \"#0066cc\"\n                          }}\n                          icon=\"user\"\n                        />\n                        <span className=\"d-none d-md-inline-block text-lowercase text-decoration-none\">\n                          {user.userEmail}\n                        </span>\n                        <Icon\n                          className=\"icon d-none d-md-inline-block text-primary\"\n                          style={{\n                            fill: \"#0066cc\"\n                          }}\n                          icon=\"expand\"\n                        />\n                      </DropdownToggle>\n                      <DropdownMenu\n                        className=\"dropdown-menu\"\n                        modifiers={dropdownModifiers}\n                      >\n                        <span className=\"d-inline-block d-md-none p-4 text-decoration-none\">\n                          {user.userEmail}\n                        </span>\n                        <DropdownItem tag=\"span\">\n                          <a\n                            className=\"list-item text-primary\"\n                            href={`/user/${user.userId}`}\n                          >\n                            <span>profile</span>\n                          </a>\n                        </DropdownItem>\n                        <DropdownItem tag=\"span\">\n                          <a\n                            className=\"list-item text-primary\"\n                            href=\"#\"\n                            onClick={onLogout}\n                          >\n                            <span className=\"text-danger\">\n                              <Trans i18nKey=\"logout\" />\n                            </span>\n                          </a>\n                        </DropdownItem>\n                      </DropdownMenu>\n                    </Dropdown>\n                  ) : (\n                    <a href=\"/\" className=\"btn btn-primary btn-sm\">\n                      <Trans i18nKey=\"login\" />\n                    </a>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SlimHeader;\n","require(\"typeface-lora\");\nrequire(\"typeface-titillium-web\");\n\nimport \"../styles/global.scss\";\n\nimport * as React from \"react\";\nimport { Container } from \"reactstrap\";\n\nimport Footer from \"./Footer\";\nimport MainHeader from \"./MainHeader\";\nimport SlimHeader from \"./SlimHeader\";\n\nimport { navigate } from \"gatsby\";\nimport { Trans } from \"react-i18next\";\nimport { GraphqlClient } from \"../graphql/client\";\nimport { getMenu, getSiteConfig } from \"../graphql/gatsby\";\nimport { getSessionInfo, logout } from \"../utils/auth\";\n\ntype LayoutProps = {\n  children: React.ReactNode;\n  menu: ReturnType<typeof getMenu>;\n  siteConfig: ReturnType<typeof getSiteConfig>;\n  title?: string;\n};\n\nconst Layout = ({ children, menu, title, siteConfig }: LayoutProps) => {\n  if (!siteConfig) {\n    return <p>missing site configuration.</p>;\n  }\n  const sessionInfo = getSessionInfo();\n  return (\n    <>\n      <div className=\"skiplinks\">\n        <a className=\"sr-only sr-only-focusable\" href=\"#main\">\n          <Trans i18nKey=\"skiplinks.goto_main\" />\n        </a>\n        <a className=\"sr-only sr-only-focusable\" href=\"#footer\">\n          <Trans i18nKey=\"skiplinks.goto_footer\" />\n        </a>\n      </div>\n      <div className=\"it-header-wrapper\">\n        <SlimHeader\n          owners={siteConfig.owners}\n          slimHeaderLinks={siteConfig.slimHeaderLinks}\n          languages={siteConfig.languages}\n          user={sessionInfo}\n          onLogout={async () => {\n            await logout(GraphqlClient);\n            navigate(\"/\");\n          }}\n        />\n        <MainHeader\n          title={siteConfig.title}\n          description={siteConfig.description}\n          socialLinks={siteConfig.socialLinks}\n          menu={menu}\n          user={sessionInfo}\n          organization={sessionInfo ? sessionInfo.organizationName : \"\"}\n        />\n      </div>\n      <Container className=\"py-5 justify-content-md-center main\" id=\"main\">\n        <main>\n          {title && <h1 style={{ color: \"white\" }}>{title}</h1>}\n          <div className=\"page-container shadow-md py-4 py-md-5 px-md-5 mt-md-4 rounded bg-white\">\n            {children}\n          </div>\n        </main>\n      </Container>\n      <Footer\n        id=\"footer\"\n        author={siteConfig.author}\n        authorLogo={siteConfig.authorLogo}\n        authorUrl={siteConfig.authorUrl}\n        footerLinks={siteConfig.footerLinks}\n        socialLinks={siteConfig.socialLinks}\n      />\n    </>\n  );\n};\n\nexport default Layout;\n","import * as React from \"react\";\nimport Helmet from \"react-helmet\";\n\ntype SeoProps = {\n  siteConfig: any;\n  description?: string;\n  lang?: string;\n  meta?: ReadonlyArray<{\n    name: string;\n    content: string;\n  }>;\n  keywords?: ReadonlyArray<string>;\n  title: string;\n};\n\nfunction SEO({\n  siteConfig,\n  description,\n  lang = \"en\",\n  meta = [],\n  title,\n  keywords\n}: SeoProps) {\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang\n      }}\n      title={title || siteConfig.title}\n      meta={[\n        {\n          name: `description`,\n          content: description || siteConfig.description\n        },\n        {\n          property: `og:title`,\n          content: title\n        },\n        {\n          property: `og:description`,\n          content: description || siteConfig.description\n        },\n        {\n          property: `og:type`,\n          content: `website`\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`\n        },\n        {\n          name: `twitter:creator`,\n          content: siteConfig.author\n        },\n        {\n          name: `twitter:title`,\n          content: title\n        },\n        {\n          name: `twitter:description`,\n          content: description || siteConfig.description\n        },\n        {\n          name: `keywords`,\n          content: keywords || siteConfig.keywords\n        }\n      ].concat(meta)}\n    >\n      <html lang={lang} />\n    </Helmet>\n  );\n}\n\nexport default SEO;\n","import gql from \"graphql-tag\";\n\nexport const SEARCH_IPA = gql`\n  query SearchIpa($search: String!) {\n    search_ipa(args: { search: $search }) {\n      cod_amm\n      des_amm\n      Comune\n    }\n    ipa_pa(where: { cod_amm: { _eq: $search } }) {\n      cod_amm\n      des_amm\n      Comune\n    }\n  }\n`;\n\nexport const GET_IPA = gql`\n  query GetIpa($ipa_code: String!) {\n    ipa_pa(where: { cod_amm: { _eq: $ipa_code } }) {\n      cod_amm\n      des_amm\n      Comune\n    }\n    ipa_ou(\n      where: {\n        _and: {\n          cod_amm: { _eq: $ipa_code }\n          cod_ou: { _eq: \"Ufficio_Transizione_Digitale\" }\n        }\n      }\n    ) {\n      cod_ou\n      nome_resp\n      cogn_resp\n      mail_resp\n    }\n  }\n`;\n\nexport const NodeFragment = gql`\n  fragment NodeFragment on node {\n    id\n    created_at\n    updated_at\n    title\n    node_group {\n      group\n      group_ipa_pa {\n        des_amm\n      }\n    }\n    content\n    language\n    status\n    version\n    type\n  }\n`;\n\nexport const NodeRevisionFragment = gql`\n  fragment NodeRevisionFragment on node_revision {\n    id\n    created_at\n    updated_at\n    title\n    node_revision_group {\n      group\n      group_ipa_pa {\n        des_amm\n      }\n    }\n    content\n    language\n    status\n    version\n    type\n  }\n`;\n\nexport const UPSERT_NODE = gql`\n  mutation UpsertNode($node: node_insert_input!) {\n    insert_node(\n      objects: [$node]\n      on_conflict: {\n        constraint: node_pkey\n        update_columns: [status, title, content, version]\n      }\n    ) {\n      returning {\n        ...NodeFragment\n      }\n    }\n  }\n\n  ${NodeFragment}\n`;\n\nexport const PUBLISH_NODE = gql`\n  mutation PublishNode($id: uuid!, $version: Int!) {\n    update_node(\n      where: { id: { _eq: $id } }\n      _set: { status: \"published\", version: $version }\n    ) {\n      returning {\n        ...NodeFragment\n      }\n    }\n  }\n  ${NodeFragment}\n`;\n\nexport const GET_LATEST_NODE_WITH_PUBLISHED = gql`\n  query GetNode($id: uuid!) {\n    latest: node(where: { id: { _eq: $id } }, limit: 1) {\n      ...NodeFragment\n      published: revisions(\n        where: { status: { _eq: \"published\" } }\n        order_by: { version: desc }\n        limit: 1\n      ) {\n        ...NodeRevisionFragment\n      }\n    }\n  }\n\n  ${NodeFragment}\n  ${NodeRevisionFragment}\n`;\n\nexport const GET_NODE_REVISION_WITH_PUBLISHED = gql`\n  query GetNodeRevision($id: uuid!, $version: Int!) {\n    revision: node_revision(\n      where: { _and: { id: { _eq: $id }, version: { _eq: $version } } }\n      limit: 1\n    ) {\n      ...NodeRevisionFragment\n    }\n    published: node_revision(\n      where: { _and: { id: { _eq: $id }, status: { _eq: \"published\" } } }\n      order_by: { version: desc }\n      limit: 1\n    ) {\n      ...NodeRevisionFragment\n    }\n  }\n\n  ${NodeRevisionFragment}\n`;\n\nexport const GET_USER_NODES = gql`\n  query GetUserNodes($userId: uuid) {\n    node(where: { user_id: { _eq: $userId } }) {\n      id\n      created_at\n      updated_at\n      title\n      group\n      language\n      status\n      version\n      type\n    }\n  }\n`;\n\nexport const GET_USER_INFO = gql`\n  query GetUserInfo($userId: uuid) {\n    user(where: { id: { _eq: $userId } }) {\n      id\n      email\n    }\n  }\n`;\n","import * as React from \"react\";\n\nexport const FieldDescription = ({ description }: { description: string }) => (\n  <small className=\"mb-0 form-text text-muted font-size-xxs\">\n    {description}\n  </small>\n);\n","import * as React from \"react\";\nimport {\n  FormGroup as RSFormGroup,\n  FormGroupProps as RSFormGroupProps\n} from \"reactstrap\";\n\ninterface FormGroupProps extends RSFormGroupProps {\n  fieldName: string;\n  isHidden: boolean;\n  children: React.ReactNode;\n}\n\nexport const FormGroup = ({\n  fieldName,\n  isHidden,\n  children\n}: FormGroupProps) => (\n  <RSFormGroup check={true} key={fieldName} className=\"mb-4\" hidden={isHidden}>\n    {children}\n  </RSFormGroup>\n);\n","import i18next from \"i18next\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { ApolloErrorsT, isTooManyRequestError } from \"../utils/errors\";\n\nconst getErrorString = (\n  translate: i18next.TFunction,\n  errors: ApolloErrorsT\n) => {\n  if (isTooManyRequestError(errors)) {\n    return translate(\"errors.too_many_requests\");\n  }\n  return JSON.stringify(errors);\n};\n\nexport default function ApolloErrors({ errors }: { errors: any }) {\n  const { t: translate } = useTranslation();\n  const errorString = getErrorString(translate, errors);\n  return errorString ? (\n    <span className=\"apollo-errors\">{errorString}</span>\n  ) : null;\n}\n","/**\n * Forked from https://github.com/salesforce/ts-safe-access\n * see also https://stackoverflow.com/questions/52064027/how-can-i-write-a-recursive-nonnullable-type-in-typescript\n *\n * Adds: correct typings\n */\n\ntype RecursiveNonNullable1<T> = { [K in keyof T]: RecursiveNonNullable<T[K]> };\ntype RecursiveNonNullable<T> = RecursiveNonNullable1<NonNullable<T>>;\n\nexport function get<T, R>(\n  obj: T,\n  fn: (obj: RecursiveNonNullable<T>) => R,\n  defaultValue: NonNullable<R>,\n  excludeNull = false\n): R {\n  try {\n    const result = fn(obj as any);\n    const ret = excludeNull\n      ? result === null\n        ? defaultValue\n        : result\n      : result;\n    return ret === undefined ? defaultValue : ret;\n  } catch (err) {\n    return defaultValue;\n  }\n}\n\nexport function has<T, R>(obj: T, getFn: (o: T) => R) {\n  try {\n    const result = getFn(obj);\n    return result !== undefined;\n  } catch (err) {\n    return false;\n  }\n}\n"],"sourceRoot":""}