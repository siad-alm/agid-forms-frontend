{"version":3,"sources":["webpack:///./src/components/PrivateRoute.tsx","webpack:///./src/templates/node/revision-template.tsx","webpack:///./src/pages/revision.tsx","webpack:///./src/icons/icons.svg","webpack:///./src/graphql/gatsby.ts","webpack:///./src/components/Icon.tsx","webpack:///./src/components/Footer.tsx","webpack:///./src/components/MegaMenu.tsx","webpack:///./src/components/MainHeader.tsx","webpack:///./src/components/SlimHeader.tsx","webpack:///./src/components/Layout.tsx","webpack:///./src/utils/yup_locale_it.ts","webpack:///./src/utils/forms.ts","webpack:///./src/components/Seo.tsx","webpack:///./src/graphql/hasura.ts","webpack:///./src/components/BodyStyles.tsx","webpack:///./src/components/LoadableView.tsx","webpack:///./node_modules/react-loadable/lib/index.js","webpack:///./src/custom/templates lazy ^\\.\\/.*\\/node\\/view\\-template$ namespace object"],"names":["PrivateRoute","_ref","Component","component","location","rest","_objectWithoutPropertiesLoose","isLoggedIn","pathname","navigate","react","RevisionTemplate","data","uuid","version","t","useTranslation","_React$useState","React","title","setTitle","siteConfig","getSiteConfig","Layout","menu","getMenu","BodyStyles","backgroundColor","Seo","react_apollo_esm","query","GET_NODE_REVISION_WITH_PUBLISHED","variables","id","_ref2","loading","error","getNodeResult","className","JSON","stringify","nodeRevision","revision","publishedNode","published","isLatestPublishedVersion","formId","content","schema","form","getForm","gatsby_browser_entry","to","LoadableView","node","values","__webpack_require__","d","__webpack_exports__","View","es","components_PrivateRoute","props","revision_template","path","module","exports","p","Array","isArray","edges","forms","allFormYaml","filter","Icon","icon","Object","assign","classNames","xlinkHref","Icons","Footer","footerLinks","socialLinks","author","authorLogo","authorUrl","Footer_objectWithoutPropertiesLoose","Container","Row","Col","xs","sm","md","href","target","src","alt","height","style","maxWidth","i18nKey","map","socialLink","name","url","key","aria-label","components_Icon","footerLink","color","dropdownModifiers","isOffcanvasOpen","relativePosition","enabled","fn","styles","position","transform","borderRadius","animationDuration","MegaMenu","user","setIsOffcanvasOpen","_React$useState2","isDropdownOpen","setIsDropdownOpen","type","aria-controls","aria-expanded","onClick","CSSTransition","in","timeout","enter","exit","enterDone","exitDone","menuItem","userHasAnyRole","roles","subtree","Dropdown","slug","tag","isOpen","toggle","_setIsDropdownOpen","DropdownToggle","caret","activeClassName","role","cursor","fill","DropdownMenu","modifiers","item","DropdownItem","MainHeader","description","organization","components_MegaMenu","flip","shift","preventOverflow","boundariesElement","SlimHeader","owners","slimHeaderLinks","languages","onLogout","i18n","isLanguageDropdownOpen","setIsLanguageDropdownOpen","isUserDropdownOpen","setIsUserDropdownOpen","_React$useState3","isLinksDropdownOpen","setIsLinksDropdownOpen","owner","e","preventDefault","slimHeaderLink","language","lang","changeLanguage","marginRight","userEmail","userId","require","children","sessionInfo","getSessionInfo","components_SlimHeader","regenerator_default","a","mark","_callee","wrap","_context","prev","next","logout","GraphqlClient","stop","components_MainHeader","organizationName","components_Footer","LOCALIZED_TYPES","number","string","date","boolean","object","array","mixed","ItLocale","default","required","oneOf","notOneOf","notType","length","min","max","matches","email","trim","lowercase","uppercase","lessThan","moreThan","notEqual","positive","negative","integer","noUnknown","Yup","GROUP_FIELD_PATTERN","PatternString","isGroupField","is","getFieldNameParts","decode","getOrElseL","Error","match","slice","toFirstGroupFieldName","_getFieldNameParts","join","isEmptyField","value","validateField","isRequired","validationExpression","field","Promise","resolve","then","validationResult","error_msg","catch","errors","toString","flattenFormFields","sections","reduce","prevSection","curSection","groups","concat","_toConsumableArray","prevGroup","curGroup","fields","group","repeatable","flattenFormFieldsWithKeys","cur","_Object$assign","flattenFormErrors","keys","prevErrors","fieldName","prevGroupField","groupField","index","prevObjField","groupFieldKey","_Object$assign2","_Object$assign3","flattenFormValues","prevValues","_Object$assign4","_Object$assign5","getDefaultValue","default_multiple_selection","default_checked","undefined","getFieldValue","widget","format","Date","options","selectedItem","find","o","label","getSelectedLabel","react__WEBPACK_IMPORTED_MODULE_0__","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","n","SEO","_ref$lang","_ref$meta","meta","keywords","htmlAttributes","property","SEARCH_IPA","gql","_templateObject","GET_IPA","_templateObject2","NodeFragment","_templateObject3","NodeRevisionFragment","_templateObject4","UPSERT_NODE","_templateObject5","PUBLISH_NODE","_templateObject6","GET_LATEST_NODE_WITH_PUBLISHED","_templateObject7","_templateObject8","GET_USER_NODES","_templateObject9","_templateObject10","flattenedFields","flattenedValues","LoadableTemplate","Loadable","loader","render","loaded","_","Template","react__WEBPACK_IMPORTED_MODULE_10__","valueKey","scope","_typeof","Symbol","iterator","obj","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","create","enumerable","writable","configurable","setPrototypeOf","__proto__","PropTypes","ALL_INITIALIZERS","READY_INITIALIZERS","load","promise","state","err","loadMap","promises","forEach","result","push","res","all","createElement","__esModule","createLoadableComponent","loadFn","_class","_temp","opts","delay","webpack","modules","init","getModuleIds","m","every","moduleId","_React$Component","LoadableComponent","this","_this","retry","setState","timedOut","_loadModule","pastDelay","preload","componentWillMount","_mounted","_this2","context","loadable","moduleName","report","_delay","setTimeout","_timeout","update","_clearTimeouts","componentWillUnmount","clearTimeout","isLoading","contextTypes","shape","func","Map","Capture","_React$Component2","apply","arguments","getChildContext","Children","only","flushInitializers","initializers","pop","propTypes","childContextTypes","preloadAll","reject","preloadReady","./dichiarazione-accessibilita/node/view-template","webpackAsyncContext","req","ids","code"],"mappings":"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","file":"component---src-pages-revision-tsx-1a49d7aa82d6b78a084c.js","sourcesContent":["import * as React from \"react\";\n\nimport { RouterProps } from \"@reach/router\";\nimport { navigate } from \"gatsby\";\nimport { isLoggedIn } from \"../utils/auth\";\n\ntype Props<T> = Omit<RouterProps, \"component\"> &\n  T & {\n    component: React.SFC<T>;\n  };\n\n// tslint:disable-next-line: only-arrow-functions\nconst PrivateRoute = function<T>({\n  component: Component,\n  location,\n  ...rest\n}: Props<T>) {\n  if (!isLoggedIn() && location && location.pathname !== `/`) {\n    // If we’re not logged in, redirect to the home page.\n    navigate(`/`);\n    return <></>;\n  }\n  return (Component as any)(rest);\n};\n\nexport default PrivateRoute;\n","import * as React from \"react\";\n\nimport Layout from \"../../components/Layout\";\nimport SEO from \"../../components/Seo\";\n\nimport { Link } from \"gatsby\";\n\nimport { ViewConfig } from \"../../generated/graphql/ViewConfig\";\n\nimport { Query } from \"react-apollo\";\nimport BodyStyles from \"../../components/BodyStyles\";\nimport LoadableView from \"../../components/LoadableView\";\nimport {\n  GetNodeRevision,\n  GetNodeRevisionVariables\n} from \"../../generated/graphql/GetNodeRevision\";\nimport { getForm, getMenu, getSiteConfig } from \"../../graphql/gatsby\";\nimport { GET_NODE_REVISION_WITH_PUBLISHED } from \"../../graphql/hasura\";\nimport { isLoggedIn } from \"../../utils/auth\";\n\nimport { useTranslation } from \"react-i18next\";\n\nconst RevisionTemplate = ({\n  data,\n  uuid,\n  version\n}: {\n  data: ViewConfig;\n  formId?: string;\n  uuid: string;\n  version: number;\n}) => {\n  const { t } = useTranslation();\n  const [title, setTitle] = React.useState(t(\"pages.revision_title\"));\n  const siteConfig = getSiteConfig(data);\n  return (\n    <Layout menu={getMenu(data)} siteConfig={siteConfig} title={title}>\n      <BodyStyles backgroundColor=\"#e7e6ff\" />\n      <SEO title={t(\"pages.revision_title\")} siteConfig={siteConfig} />\n      <Query<GetNodeRevision, GetNodeRevisionVariables>\n        query={GET_NODE_REVISION_WITH_PUBLISHED}\n        variables={{\n          id: uuid,\n          version\n        }}\n      >\n        {({ loading, error, data: getNodeResult }) => {\n          if (loading) {\n            return <p>{t(\"loading_data\")}</p>;\n          }\n          if (error) {\n            return (\n              <p className=\"alert alert-warning\">\n                {t(\"errors.error_getting_data\")}: {JSON.stringify(error)}\n              </p>\n            );\n          }\n\n          const nodeRevision =\n            getNodeResult && getNodeResult.revision && getNodeResult.revision[0]\n              ? getNodeResult.revision[0]\n              : null;\n\n          if (!nodeRevision) {\n            return (\n              <p className=\"alert alert-warning\">\n                {t(\"errors.content_not_found\")}\n              </p>\n            );\n          }\n\n          const publishedNode =\n            getNodeResult &&\n            getNodeResult.published &&\n            getNodeResult.published[0]\n              ? getNodeResult.published[0]\n              : null;\n\n          const isLatestPublishedVersion =\n            publishedNode && publishedNode.version === nodeRevision.version;\n          {\n            /* shows the latest published page with an eventual link to latest version (only if the user is logged in) */\n          }\n          const formId = nodeRevision.content.schema.id;\n          const form = getForm(data, formId);\n          if (!form) {\n            return (\n              <p className=\"alert alert-warning\">\n                {t(\"errors.content_not_found\")}\n              </p>\n            );\n          }\n          setTitle(nodeRevision.title);\n          return (\n            <>\n              {isLoggedIn() && (\n                <div className=\"pl-lg-5\">\n                  <small>\n                    <Link\n                      to={`/form/${nodeRevision.content.schema.id}/${nodeRevision.id}`}\n                    >\n                      {t(\"edit\")}\n                    </Link>\n                  </small>\n                  {publishedNode && !isLatestPublishedVersion && (\n                    <p className=\"alert alert-warning mt-3\">\n                      {t(\"not_published_version\")}\n                      <br />\n                      <Link to={`/view/${publishedNode.id}`}>\n                        {t(\"view_published_version\")}\n                      </Link>\n                    </p>\n                  )}\n                </div>\n              )}\n              {nodeRevision && (\n                <LoadableView\n                  node={nodeRevision}\n                  form={form}\n                  values={nodeRevision.content.values}\n                />\n              )}\n            </>\n          );\n        }}\n      </Query>\n    </Layout>\n  );\n};\n\nexport default RevisionTemplate;\n","import { RouteComponentProps, Router } from \"@reach/router\";\n\nimport { graphql } from \"gatsby\";\nimport * as React from \"react\";\n\nimport PrivateRoute from \"../components/PrivateRoute\";\nimport { ViewConfig } from \"../generated/graphql/ViewConfig\";\nimport RevisionTemplate from \"../templates/node/revision-template\";\n\nconst View = ({ data }: { data: ViewConfig }) => (\n  <Router>\n    <PrivateRoute\n      component={(\n        props: RouteComponentProps<{ uuid: string; version: number }>\n      ) => (\n        <RevisionTemplate\n          data={data}\n          uuid={props.uuid!}\n          version={props.version!}\n        />\n      )}\n      path=\"/revision/:uuid/:version\"\n    />\n  </Router>\n);\n\nexport const query = graphql`\n  query RevisionConfig {\n    menu: allConfigYaml(\n      filter: { menu: { elemMatch: { name: { ne: null } } } }\n    ) {\n      ...PageConfigFragment\n    }\n    siteConfig: allConfigYaml(filter: { title: { ne: null } }) {\n      ...SiteConfigFragment\n    }\n    allFormYaml {\n      ...FormSchemaFragment\n    }\n  }\n`;\n\nexport default View;\n","module.exports = __webpack_public_path__ + \"static/icons-6642dbab43a8aaf04fc37cc89429ceb5.svg\";","import { graphql } from \"gatsby\";\nimport { FormConfig } from \"../generated/graphql/FormConfig\";\nimport {\n  PageConfig,\n  PageConfig_menu_edges_node_menu,\n  PageConfig_siteConfig_edges_node\n} from \"../generated/graphql/PageConfig\";\nimport { ViewConfig } from \"../generated/graphql/ViewConfig\";\nimport { FormT } from \"../utils/forms\";\n\nexport const FormSchemaFragment = graphql`\n  fragment FormSchemaFragment on FormYamlConnection {\n    edges {\n      node {\n        id\n        name\n        version\n        language\n        enabled\n        slug_pattern\n        title_pattern\n        sections {\n          title\n          name\n          description\n          groups {\n            name\n            title\n            description\n            repeatable\n            fields {\n              default\n              default_checked\n              default_multiple_selection\n              description\n              name\n              multiple\n              title\n              widget\n              show_if\n              valid_if\n              required_if\n              error_msg\n              computed_value\n              options {\n                value\n                label\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const PageConfigFragment = graphql`\n  fragment PageConfigFragment on ConfigYamlConnection {\n    edges {\n      node {\n        menu {\n          name\n          slug\n          roles\n        }\n      }\n    }\n  }\n`;\n\nexport const getMenu = (\n  data: PageConfig\n): ReadonlyArray<PageConfig_menu_edges_node_menu | null> | null =>\n  data.menu && Array.isArray(data.menu.edges) && data.menu.edges[0]\n    ? data.menu.edges[0].node.menu\n    : null;\n\nexport const getSiteConfig = (\n  data: PageConfig\n): PageConfig_siteConfig_edges_node | null =>\n  data.siteConfig &&\n  Array.isArray(data.siteConfig.edges) &&\n  data.siteConfig.edges[0]\n    ? data.siteConfig.edges[0].node\n    : null;\n\nexport function getForm(\n  data: FormConfig | ViewConfig,\n  formId?: string\n): FormT | null {\n  if (!formId) {\n    return null;\n  }\n  const forms = data.allFormYaml\n    ? data.allFormYaml.edges.filter(node => node.node.id === formId)\n    : null;\n  if (!forms || !forms[0] || !forms[0].node) {\n    return null;\n  }\n  return forms[0].node;\n}\n\nexport const SiteConfigFragment = graphql`\n  fragment SiteConfigFragment on ConfigYamlConnection {\n    edges {\n      node {\n        title\n        description\n        defaultLanguage\n        author\n        authorLogo\n        authorUrl\n        homepage\n        owners {\n          name\n          url\n        }\n        languages {\n          name\n        }\n        slimHeaderLinks {\n          name\n          url\n        }\n        socialLinks {\n          name\n          url\n          icon\n        }\n        footerLinks {\n          name\n          url\n        }\n      }\n    }\n  }\n`;\n","import classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport Icons from \"../icons/icons.svg\";\n\ntype IconProps = { className?: string; icon: string } & React.SVGProps<\n  SVGSVGElement\n>;\n\nconst Icon = ({ className, icon, ...props }: IconProps) => (\n  <svg className={classNames(\"icon\", className)} {...props}>\n    <use xlinkHref={`${Icons}#it-${icon}`} />\n  </svg>\n);\n\nexport default Icon;\n","import { Link } from \"gatsby\";\nimport * as React from \"react\";\nimport { Col, Container, Row } from \"reactstrap\";\n\nimport { Trans } from \"react-i18next\";\nimport { getSiteConfig } from \"../graphql/gatsby\";\nimport Icon from \"./Icon\";\n\ntype FooterProps = Pick<\n  NonNullable<ReturnType<typeof getSiteConfig>>,\n  // tslint:disable-next-line: max-union-size\n  \"footerLinks\" | \"socialLinks\" | \"author\" | \"authorLogo\" | \"authorUrl\"\n> & { id: string };\n\nconst Footer = ({\n  footerLinks,\n  socialLinks,\n  author,\n  authorLogo,\n  authorUrl,\n  ...props\n}: FooterProps) => (\n  <footer className=\"neutral-1-bg-a9\" {...props}>\n    <Container>\n      <Row className=\"py-4\">\n        <Col xs=\"12\" sm=\"6\" md=\"4\">\n          <div className=\"px-2 py-3\">\n            <a href={authorUrl || \"\"} target=\"_blank\">\n              <img\n                src={authorLogo || \"\"}\n                alt={author || \"\"}\n                height=\"36\"\n                style={{ maxWidth: `100%` }}\n              />\n            </a>\n          </div>\n        </Col>\n        <Col xs=\"12\" sm=\"6\" md=\"4\" className=\"d-flex\">\n          <div className=\"px-2 py-2\" />\n        </Col>\n        <Col xs=\"12\" sm=\"6\" md=\"4\" className=\"text-white text-right pt-2\">\n          <span>\n            <Trans i18nKey=\"follow_us\" />\n          </span>\n          {(socialLinks || []).map(\n            socialLink =>\n              socialLink &&\n              socialLink.icon &&\n              socialLink.name &&\n              socialLink.url && (\n                <a\n                  className=\"text-white p-2\"\n                  key={socialLink.icon}\n                  href={socialLink.url}\n                  aria-label={socialLink.name}\n                >\n                  <Icon\n                    icon={socialLink.icon}\n                    className=\"icon-sm icon-light align-top\"\n                  />\n                </a>\n              )\n          )}\n        </Col>\n      </Row>\n      <Row className=\"py-4 border-white border-top\">\n        <ul className=\"col list-inline small\">\n          {(footerLinks || []).map(\n            footerLink =>\n              footerLink &&\n              footerLink.name &&\n              footerLink.url && (\n                <li key={footerLink.name} className=\"list-inline-item px-1\">\n                  <Link\n                    className=\"small-prints font-weight-bold\"\n                    style={{ color: \"#0bd9d2\" }}\n                    to={footerLink.url}\n                  >\n                    {footerLink.name}\n                  </Link>\n                </li>\n              )\n          )}\n        </ul>\n      </Row>\n    </Container>\n  </footer>\n);\n\nexport default Footer;\n","import { Link } from \"gatsby\";\nimport * as React from \"react\";\n\nimport { useTranslation } from \"react-i18next\";\nimport { CSSTransition } from \"react-transition-group\";\nimport {\n  Dropdown,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle\n} from \"reactstrap\";\nimport { getMenu } from \"../graphql/gatsby\";\nimport { getSessionInfo, userHasAnyRole } from \"../utils/auth\";\nimport Icon from \"./Icon\";\n\ntype MegaMenuProps = {\n  menu: ReturnType<typeof getMenu>;\n  user: ReturnType<typeof getSessionInfo>;\n};\n\nconst BACKGROUND_COLOR = \"#ffffff\";\nconst FOREGROUND_COLOR = \"#455B71\";\n\nconst dropdownModifiers = (isOffcanvasOpen: boolean) => ({\n  relativePosition: {\n    enabled: true,\n    fn: (data: any) =>\n      isOffcanvasOpen\n        ? {\n            ...data,\n            styles: {\n              ...data.styles,\n              position: \"relative\",\n              transform: \"none\"\n            }\n          }\n        : {\n            ...data,\n            styles: {\n              ...data.styles,\n              borderRadius: \"4px\",\n              transform: \"translate3d(15px, 65px, 0px)\",\n              animationDuration: \"0.2s\"\n            }\n          }\n  }\n});\n\nexport const MegaMenu = ({ menu, user }: MegaMenuProps) => {\n  if (!menu) {\n    return null;\n  }\n  const [isOffcanvasOpen, setIsOffcanvasOpen] = React.useState(false);\n  const [isDropdownOpen, setIsDropdownOpen] = React.useState({} as Record<\n    string,\n    boolean\n  >);\n\n  const { t } = useTranslation();\n\n  return (\n    <nav className=\"navbar navbar-expand-lg has-megamenu\">\n      <button\n        className=\"custom-navbar-toggler\"\n        type=\"button\"\n        aria-controls=\"navbarNavC\"\n        aria-expanded={isOffcanvasOpen}\n        aria-label={t(\"toggle_navigation\")}\n        onClick={() => setIsOffcanvasOpen(!isOffcanvasOpen)}\n      >\n        <Icon className=\"icon icon-sm icon-light\" icon=\"burger\" />\n      </button>\n\n      <CSSTransition\n        in={isOffcanvasOpen}\n        timeout={{\n          enter: 1,\n          exit: 300\n        }}\n        classNames={{\n          enter: \"navbar-collapsable d-block\",\n          enterDone: \"navbar-collapsable d-block expanded\",\n          exit: \"navbar-collapsable d-block\",\n          exitDone: \"navbar-collapsable\"\n        }}\n      >\n        <div className={`navbar-collapsable`} id=\"navbarNavC\">\n          <div\n            className={`overlay ${isOffcanvasOpen ? \"d-block\" : \"d-none\"}`}\n            onClick={() => setIsOffcanvasOpen(!isOffcanvasOpen)}\n          />\n          <div className=\"close-div sr-only\">\n            <button\n              className=\"btn close-menu\"\n              type=\"button\"\n              onClick={() => setIsOffcanvasOpen(!isOffcanvasOpen)}\n            >\n              <Icon className=\"icon icon-sm icon-light\" icon=\"close\" />\n              {t(\"close\")}\n            </button>\n          </div>\n          <div className=\"menu-wrapper\">\n            <ul className=\"navbar-nav megamenu-top-links shadow-md mt-4\">\n              {menu.map(menuItem => {\n                return (\n                  menuItem &&\n                  menuItem.name &&\n                  userHasAnyRole(\n                    user,\n                    (menuItem.roles as ReadonlyArray<string>) || []\n                  ) &&\n                  // TODO: remove cast\n                  ((menuItem as any).subtree ? (\n                    <Dropdown\n                      key={menuItem.slug!}\n                      className=\"nav-item megamenu\"\n                      tag=\"li\"\n                      isOpen={isDropdownOpen[menuItem.slug!]}\n                      toggle={() =>\n                        setIsDropdownOpen({\n                          [menuItem.slug!]: isDropdownOpen[menuItem.slug!]\n                            ? !isDropdownOpen[menuItem.slug!]\n                            : true\n                        })\n                      }\n                    >\n                      <DropdownToggle\n                        caret={true}\n                        tag=\"a\"\n                        className=\"nav-link megamenu-top-link font-weight-600\"\n                        activeClassName=\"active\"\n                        role=\"button\"\n                        style={{\n                          cursor: \"pointer\"\n                        }}\n                      >\n                        {t(menuItem.name)}\n                        <Icon\n                          className=\"icon d-inline-block\"\n                          icon=\"expand\"\n                          style={{\n                            fill: !isOffcanvasOpen\n                              ? FOREGROUND_COLOR\n                              : BACKGROUND_COLOR\n                          }}\n                        />\n                      </DropdownToggle>\n                      <DropdownMenu\n                        modifiers={dropdownModifiers(isOffcanvasOpen)}\n                      >\n                        <div className=\"link-list-wrapper\">\n                          <ul className=\"mt-2\">\n                            {/* TODO: remove cast */}\n                            {(menuItem as any).subtree.map(\n                              (item: any) =>\n                                item &&\n                                item.slug && (\n                                  <DropdownItem\n                                    tag=\"li\"\n                                    key={item.slug}\n                                    className=\"p-0\"\n                                  >\n                                    <Link to={item.slug} className=\"p-0\">\n                                      {t(item.name)}\n                                    </Link>\n                                  </DropdownItem>\n                                )\n                            )}\n                          </ul>\n                        </div>\n                      </DropdownMenu>\n                    </Dropdown>\n                  ) : (\n                    userHasAnyRole(\n                      user,\n                      (menuItem.roles as ReadonlyArray<string>) || []\n                    ) && (\n                      <li className=\"nav-item megamenu\" key={menuItem.slug!}>\n                        <Link\n                          to={menuItem.slug!}\n                          className=\"nav-link megamenu-top-link font-weight-600\"\n                        >\n                          {t(menuItem.name)}\n                        </Link>\n                      </li>\n                    )\n                  ))\n                );\n              })}\n            </ul>\n          </div>\n        </div>\n      </CSSTransition>\n    </nav>\n  );\n};\n\nexport default MegaMenu;\n","import { Link } from \"gatsby\";\nimport * as React from \"react\";\n\nimport MegaMenu from \"./MegaMenu\";\n\nimport { getMenu, getSiteConfig } from \"../graphql/gatsby\";\nimport { getSessionInfo } from \"../utils/auth\";\nimport Icon from \"./Icon\";\n\ntype MainHeaderProps = Pick<\n  NonNullable<ReturnType<typeof getSiteConfig>>,\n  \"title\" | \"description\" | \"socialLinks\"\n> & {\n  menu: ReturnType<typeof getMenu>;\n  organization: string;\n  user: ReturnType<typeof getSessionInfo>;\n};\n\nconst MainHeader = ({\n  title,\n  description,\n  menu,\n  socialLinks,\n  organization,\n  user\n}: MainHeaderProps) => (\n  <>\n    <div className=\"it-nav-wrapper\">\n      <div className=\"it-header-center-wrapper it-small-header\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"it-header-center-content-wrapper\">\n                <div className=\"it-brand-wrapper\">\n                  <Link to=\"/\">\n                    {/* <Icon icon=\"code-circle\" /> */}\n                    <div className=\"it-brand-text\">\n                      <h2 className=\"no_toc\">{title}</h2>\n                      <h3 className=\"no_toc d-none d-md-block\">\n                        {description}\n                      </h3>\n                    </div>\n                  </Link>\n                </div>\n                <div className=\"it-right-zone\">\n                  <div className=\"d-none d-lg-block\">{organization}</div>\n                  <div className=\"it-socials d-none d-md-flex\">\n                    <ul>\n                      {(socialLinks || []).map(\n                        socialLink =>\n                          socialLink &&\n                          socialLink.name &&\n                          socialLink.url &&\n                          socialLink.icon && (\n                            <li key={socialLink.name}>\n                              <a\n                                href={socialLink.url}\n                                aria-label={socialLink.name}\n                              >\n                                <Icon icon={socialLink.icon} />\n                              </a>\n                            </li>\n                          )\n                      )}\n                    </ul>\n                  </div>\n                  <div className=\"it-search-wrapper\" />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"it-header-navbar-wrapper\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <MegaMenu menu={menu} user={user} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </>\n);\n\nexport default MainHeader;\n","import * as React from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport {\n  Dropdown,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle\n} from \"reactstrap\";\nimport { getSiteConfig } from \"../graphql/gatsby\";\nimport { getSessionInfo, isLoggedIn } from \"../utils/auth\";\nimport Icon from \"./Icon\";\n\nconst dropdownModifiers = {\n  flip: {\n    enabled: true\n  },\n  shift: {\n    enabled: true\n  },\n  preventOverflow: {\n    enabled: true,\n    boundariesElement: \"viewport\" as \"viewport\"\n  },\n  relativePosition: {\n    enabled: true,\n    fn: (data: any) => ({\n      ...data,\n      styles: {\n        ...data.styles,\n        borderRadius: \"4px\",\n        transform: \"translate3d(0px, 55px, 0px)\",\n        animationDuration: \"0.2s\"\n      }\n    })\n  }\n};\n\ntype SlimHeaderProps = Pick<\n  NonNullable<ReturnType<typeof getSiteConfig>>,\n  // tslint:disable-next-line: max-union-size\n  \"owners\" | \"slimHeaderLinks\" | \"languages\"\n> & { user: ReturnType<typeof getSessionInfo> } & {\n  onLogout: (args: any) => any;\n};\n\nexport const SlimHeader = ({\n  owners,\n  slimHeaderLinks,\n  languages,\n  user,\n  onLogout\n}: SlimHeaderProps) => {\n  const { i18n } = useTranslation();\n  const [isLanguageDropdownOpen, setIsLanguageDropdownOpen] = React.useState(\n    false\n  );\n  const [isUserDropdownOpen, setIsUserDropdownOpen] = React.useState(false);\n  const [isLinksDropdownOpen, setIsLinksDropdownOpen] = React.useState(false);\n  return (\n    <div className=\"it-header-slim-wrapper\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"it-header-slim-wrapper-content\">\n              {(owners || []).map(\n                owner =>\n                  owner &&\n                  owner.url && (\n                    <a\n                      className=\"d-none d-lg-block navbar-brand\"\n                      href={owner.url}\n                      key={owner.url}\n                      role=\"button\"\n                      aria-expanded=\"false\"\n                      aria-controls=\"header-links\"\n                    >\n                      <span>{owner.name}</span>\n                    </a>\n                  )\n              )}\n              <div className=\"nav-mobile\">\n                <nav>\n                  {(owners || []).map(\n                    owner =>\n                      owner &&\n                      owner.url && (\n                        <a\n                          className=\"d-lg-none it-opener collapsed\"\n                          href={owner.url}\n                          key={owner.url}\n                          role=\"button\"\n                          aria-expanded=\"false\"\n                          aria-controls=\"header-links\"\n                          onClick={e => {\n                            e.preventDefault();\n                            setIsLinksDropdownOpen(!isLinksDropdownOpen);\n                          }}\n                        >\n                          <span>{owner.name}</span>\n                          <Icon className=\"icon d-lg-none\" icon=\"expand\" />\n                        </a>\n                      )\n                  )}\n                  <div\n                    className={`link-list-wrapper collapse ${\n                      isLinksDropdownOpen ? \"show\" : \"\"\n                    }`}\n                    id=\"header-links\"\n                  >\n                    <ul className=\"link-list\">\n                      {(slimHeaderLinks || []).map(\n                        slimHeaderLink =>\n                          slimHeaderLink &&\n                          slimHeaderLink.name &&\n                          slimHeaderLink.url && (\n                            <li key={slimHeaderLink.name}>\n                              <a href={slimHeaderLink.url} className=\"px-3\">\n                                {slimHeaderLink.name}\n                              </a>\n                            </li>\n                          )\n                      )}\n                    </ul>\n                  </div>\n                </nav>\n              </div>\n              <div className=\"header-slim-right-zone\">\n                {languages && (\n                  <Dropdown\n                    className=\"nav-item\"\n                    isOpen={isLanguageDropdownOpen}\n                    toggle={() =>\n                      setIsLanguageDropdownOpen(!isLanguageDropdownOpen)\n                    }\n                  >\n                    <DropdownToggle\n                      caret={true}\n                      tag=\"a\"\n                      className=\"nav-link\"\n                      style={{\n                        cursor: \"pointer\"\n                      }}\n                    >\n                      {i18n.language}\n                      <Icon className=\"icon d-block\" icon=\"expand\" />\n                    </DropdownToggle>\n                    <DropdownMenu\n                      className=\"dropdown-menu\"\n                      modifiers={dropdownModifiers}\n                    >\n                      {(languages || []).map(\n                        lang =>\n                          lang &&\n                          lang.name && (\n                            <DropdownItem key={lang.name} tag=\"span\">\n                              <a\n                                role=\"button\"\n                                href=\"#\"\n                                className=\"list-item text-primary\"\n                                onClick={() => i18n.changeLanguage(lang.name!)}\n                              >\n                                <span>{lang.name}</span>\n                              </a>\n                            </DropdownItem>\n                          )\n                      )}\n                    </DropdownMenu>\n                  </Dropdown>\n                )}\n                <div className=\"it-access-top-wrapper\">\n                  {isLoggedIn() && user ? (\n                    <Dropdown\n                      isOpen={isUserDropdownOpen}\n                      toggle={() => setIsUserDropdownOpen(!isUserDropdownOpen)}\n                    >\n                      <DropdownToggle\n                        caret={true}\n                        tag=\"a\"\n                        className=\"bg-white text-primary font-weight-600 btn btn-xs px-3 text-decoration-none\"\n                        style={{\n                          cursor: \"pointer\",\n                          marginRight: \"-16px\"\n                        }}\n                      >\n                        <Icon\n                          className=\"icon d-block d-md-none text-primary\"\n                          style={{\n                            fill: \"#0066cc\"\n                          }}\n                          icon=\"user\"\n                        />\n                        <span className=\"d-none d-md-inline-block text-lowercase text-decoration-none\">\n                          {user.userEmail}\n                        </span>\n                        <Icon\n                          className=\"icon d-none d-md-inline-block text-primary\"\n                          style={{\n                            fill: \"#0066cc\"\n                          }}\n                          icon=\"expand\"\n                        />\n                      </DropdownToggle>\n                      <DropdownMenu\n                        className=\"dropdown-menu\"\n                        modifiers={dropdownModifiers}\n                      >\n                        <span className=\"d-inline-block d-md-none p-4 text-decoration-none\">\n                          {user.userEmail}\n                        </span>\n                        <DropdownItem tag=\"span\">\n                          <a\n                            className=\"list-item text-primary\"\n                            href={`/user/${user.userId}`}\n                          >\n                            <span>profile</span>\n                          </a>\n                        </DropdownItem>\n                        <DropdownItem tag=\"span\">\n                          <a\n                            className=\"list-item text-primary\"\n                            href=\"#\"\n                            onClick={onLogout}\n                          >\n                            <span className=\"text-danger\">\n                              <Trans i18nKey=\"logout\" />\n                            </span>\n                          </a>\n                        </DropdownItem>\n                      </DropdownMenu>\n                    </Dropdown>\n                  ) : (\n                    <a href=\"/\" className=\"btn btn-primary btn-sm\">\n                      <Trans i18nKey=\"login\" />\n                    </a>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SlimHeader;\n","require(\"typeface-lora\");\nrequire(\"typeface-titillium-web\");\n\nimport \"../styles/global.scss\";\n\nimport * as React from \"react\";\nimport { Container } from \"reactstrap\";\n\nimport Footer from \"./Footer\";\nimport MainHeader from \"./MainHeader\";\nimport SlimHeader from \"./SlimHeader\";\n\nimport { navigate } from \"gatsby\";\nimport { Trans } from \"react-i18next\";\nimport { GraphqlClient } from \"../graphql/client\";\nimport { getMenu, getSiteConfig } from \"../graphql/gatsby\";\nimport { getSessionInfo, logout } from \"../utils/auth\";\n\ntype LayoutProps = {\n  children: React.ReactNode;\n  menu: ReturnType<typeof getMenu>;\n  siteConfig: ReturnType<typeof getSiteConfig>;\n  title?: string;\n};\n\nconst Layout = ({ children, menu, title, siteConfig }: LayoutProps) => {\n  if (!siteConfig) {\n    return <p>missing site configuration.</p>;\n  }\n  const sessionInfo = getSessionInfo();\n  return (\n    <>\n      <div className=\"skiplinks\">\n        <a className=\"sr-only sr-only-focusable\" href=\"#main\">\n          <Trans i18nKey=\"skiplinks.goto_main\" />\n        </a>\n        <a className=\"sr-only sr-only-focusable\" href=\"#footer\">\n          <Trans i18nKey=\"skiplinks.goto_footer\" />\n        </a>\n      </div>\n      <div className=\"it-header-wrapper\">\n        <SlimHeader\n          owners={siteConfig.owners}\n          slimHeaderLinks={siteConfig.slimHeaderLinks}\n          languages={siteConfig.languages}\n          user={sessionInfo}\n          onLogout={async () => {\n            await logout(GraphqlClient);\n            navigate(\"/\");\n          }}\n        />\n        <MainHeader\n          title={siteConfig.title}\n          description={siteConfig.description}\n          socialLinks={siteConfig.socialLinks}\n          menu={menu}\n          user={sessionInfo}\n          organization={sessionInfo ? sessionInfo.organizationName : \"\"}\n        />\n      </div>\n      <Container className=\"py-5 justify-content-md-center main\" id=\"main\">\n        <main>\n          {title && <h1 style={{ color: \"white\" }}>{title}</h1>}\n          <div className=\"page-container shadow-md py-4 py-md-5 px-md-5 mt-md-4 rounded bg-white\">\n            {children}\n          </div>\n        </main>\n      </Container>\n      <Footer\n        id=\"footer\"\n        author={siteConfig.author}\n        authorLogo={siteConfig.authorLogo}\n        authorUrl={siteConfig.authorUrl}\n        footerLinks={siteConfig.footerLinks}\n        socialLinks={siteConfig.socialLinks}\n      />\n    </>\n  );\n};\n\nexport default Layout;\n","const LOCALIZED_TYPES: Record<string, string> = {\n  number: \"numerico\",\n  string: \"stringa\",\n  date: \"data\",\n  boolean: \"booleano\",\n  object: \"oggetto\",\n  array: \"array\",\n  mixed: \"mixed\"\n};\n\nexport const mixed = {\n  default: \"non ha un formato valido\",\n  required: \"è un campo richiesto\",\n  oneOf: \"deve avere uno tra i seguenti valori: ${values}\",\n  notOneOf: \"non deve avere il valore: ${values}\",\n  notType: ({ type }: { type: string }) => {\n    return `deve essere di tipo ${LOCALIZED_TYPES[type]}`;\n  }\n};\n\n// tslint:disable-next-line: variable-name\nexport const string = {\n  length: \"deve essere di esattamente ${length} caratteri\",\n  min: \"deve avere almeno ${min} caratteri\",\n  max: \"deve avere al massimo ${max} caratteri\",\n  matches: 'deve essere del formato: \"${regex}\"',\n  email: \"dev'essere un'email valida\",\n  url: \"dev'essere un indirizzo web valido\",\n  trim: \"dev'essere una stringa senza spazi alla fine o all'inizio\",\n  lowercase: \"dev'essere in minuscolo\",\n  uppercase: \"deve essere in maiuscolo\"\n};\n\n// tslint:disable-next-line: variable-name\nexport const number = {\n  min: \"deve essere maggiore o uguale a ${min}\",\n  max: \"deve essere minore o uguale a ${max}\",\n  lessThan: \"deve essere minore di ${less}\",\n  moreThan: \"deve essere maggiore di ${more}\",\n  notEqual: \"deve differire da ${notEqual}\",\n  positive: \"deve essere un numero positivo\",\n  negative: \"deve essere un numero negativo\",\n  integer: \"deve essere un intero\"\n};\n\nexport const date = {\n  min: \"deve indicare una data oltre ${min}\",\n  max: \"deve indicare una data prima di ${max}\"\n};\n\n// tslint:disable-next-line: variable-name\nexport const boolean = {};\n\nexport const object = {\n  noUnknown: \"possiede delle proprietà non riconosciute\"\n};\n\nexport const array = {\n  min: \"deve avere almeno ${min} elementi selezionati\",\n  max: \"deve avere al massimo ${max} elementi selezionati\"\n};\n\nexport const ItLocale = {\n  mixed,\n  string,\n  number,\n  date,\n  object,\n  array,\n  boolean\n};\n","import * as Yup from \"yup\";\n\nimport { ItLocale } from \"../utils/yup_locale_it\";\n\nimport { FormikProps } from \"formik\";\n\nimport { format } from \"date-fns\";\nimport { PatternString } from \"italia-ts-commons/lib/strings\";\nimport {\n  FormSchemaFragment_edges_node,\n  FormSchemaFragment_edges_node_sections,\n  FormSchemaFragment_edges_node_sections_groups,\n  FormSchemaFragment_edges_node_sections_groups_fields\n} from \"../generated/graphql/FormSchemaFragment\";\n\nYup.setLocale(ItLocale);\n\nconst GROUP_FIELD_PATTERN_STR = \"^(.+)\\\\.([0-9]+)\\\\.(.+)$\";\nconst GROUP_FIELD_PATTERN = PatternString(GROUP_FIELD_PATTERN_STR);\n\nexport const isGroupField = (name: any): name is typeof GROUP_FIELD_PATTERN =>\n  typeof name === \"string\" && GROUP_FIELD_PATTERN.is(name);\n\n/**\n * @return array [ groupName, index, fieldName ]\n */\nexport const getFieldNameParts = (name: typeof GROUP_FIELD_PATTERN) => {\n  const groupName = GROUP_FIELD_PATTERN.decode(name).getOrElseL(() => {\n    // cannot happen\n    throw new Error(\"invalid group name\");\n  });\n  const matches = groupName.match(GROUP_FIELD_PATTERN_STR);\n  if (!matches) {\n    // cannot happen\n    throw new Error(\"invalid group name\");\n  }\n  return matches.slice(1);\n};\n\n/*\n *  Used to get field templates for repeatable fields groups.\n */\nexport const toFirstGroupFieldName = (name: typeof GROUP_FIELD_PATTERN) => {\n  const [groupName, , fieldName] = getFieldNameParts(name);\n  return [groupName, \"0\", fieldName].join(\".\");\n};\n\nexport const isEmptyField = (value: any) =>\n  value === undefined || value === null || value === \"\";\n\nexport interface FormValuesT {\n  [k: string]: any;\n}\n\nexport type FormT = FormSchemaFragment_edges_node;\nexport type FormsectionT = FormSchemaFragment_edges_node_sections;\nexport type FormGroupT = FormSchemaFragment_edges_node_sections_groups;\nexport type FieldT = FormSchemaFragment_edges_node_sections_groups_fields;\n\nexport type FormFieldPropsT = {\n  field: FieldT;\n  form: FormikProps<FormValuesT>;\n  isHidden: boolean;\n  isRequired: boolean;\n  validationExpression: any;\n  valueExpression: any;\n};\n\nexport const validateField = (\n  isRequired: boolean,\n  validationExpression: any,\n  field: FieldT,\n  form: FormikProps<FormValuesT>\n) =>\n  isRequired || validationExpression\n    ? (value: any) =>\n        Promise.resolve()\n          .then(() => {\n            if (isRequired && isEmptyField(value)) {\n              // tslint:disable-next-line: no-string-throw\n              throw \"Campo richiesto\";\n            }\n            return validationExpression\n              ? validationExpression({\n                  Yup,\n                  value,\n                  ...form.values\n                })\n              : true;\n          })\n          .then(validationResult => {\n            // returns custom error message if validation fails\n            return validationResult === false\n              ? field.error_msg || \"validation error\"\n              : null;\n          })\n          .catch(e => {\n            // prints custom or default error message\n            return (\n              field.error_msg ||\n              (e.errors && e.errors.join ? e.errors.join(\", \") : e.toString())\n            );\n          })\n    : () => Promise.resolve(null);\n\n/**\n * Flatten and rename fields that belog to a group\n *\n * ie. group[0][fielName] => { fieldName: group.0.fieldname }\n */\nexport function getGroupFields(group: FormGroupT) {\n  return group.fields && group.repeatable\n    ? (group.fields as ReadonlyArray<FieldT>).map(field =>\n        field ? { ...field, name: `${group.name}.0.${field.name}` } : \"\"\n      )\n    : group.fields || [];\n}\n\n/**\n * Flatten form fields into a plain array\n */\nexport function flattenFormFields(form: FormT) {\n  if (!form.sections || !form.sections[0]) {\n    return [];\n  }\n  return (form.sections as ReadonlyArray<FormsectionT>).reduce(\n    (prevSection: ReadonlyArray<FieldT>, curSection: FormsectionT) => {\n      return curSection && curSection.groups\n        ? [\n            ...prevSection,\n            ...curSection.groups.reduce(\n              (prevGroup, curGroup) =>\n                curGroup && curGroup.fields\n                  ? ([\n                      ...prevGroup,\n                      ...getGroupFields(curGroup)\n                    ] as ReadonlyArray<FieldT>)\n                  : prevGroup,\n              [] as ReadonlyArray<FieldT>\n            )\n          ]\n        : prevSection;\n    },\n    [] as ReadonlyArray<FieldT>\n  );\n}\n\n/**\n * Flatten form fields into a plain object\n */\nexport function flattenFormFieldsWithKeys(form: FormT): Record<string, FieldT> {\n  const fields = flattenFormFields(form);\n  return fields.reduce(\n    (prev, cur) => (cur && cur.name ? { ...prev, [cur.name]: cur } : prev),\n    {} as Record<string, FieldT>\n  );\n}\n\n/**\n * Flatten form errors into an array considering field groups\n */\nexport function flattenFormErrors(\n  errors: Record<string, any>\n): Record<string, string> {\n  return Object.keys(errors).reduce(\n    (prevErrors: Record<string, string>, fieldName: string) => {\n      if (!fieldName || !errors[fieldName]) {\n        return prevErrors;\n      }\n      if (Array.isArray(errors[fieldName])) {\n        const group: ReadonlyArray<any> = errors[fieldName];\n        return {\n          ...prevErrors,\n          ...group.reduce(\n            (\n              prevGroupField: Record<string, string>,\n              groupField: any,\n              index: number\n            ) => ({\n              ...prevGroupField,\n              ...Object.keys(groupField).reduce(\n                (prevObjField, groupFieldKey) => ({\n                  ...prevObjField,\n                  [`${fieldName}.${index}.${groupFieldKey}`]: errors[fieldName][\n                    index\n                  ][groupFieldKey]\n                }),\n                {} as Record<string, string>\n              )\n            }),\n            {} as Record<string, string>\n          )\n        };\n      }\n      if (typeof errors[fieldName] === \"string\") {\n        return {\n          ...prevErrors,\n          [fieldName]: errors[fieldName]\n        };\n      }\n      return prevErrors;\n    },\n    {} as Record<string, string>\n  );\n}\n\n/**\n * Flatten form values into array considering field groups\n */\nexport function flattenFormValues(\n  values: Record<string, any>\n): Record<string, string> {\n  return Object.keys(values).reduce(\n    (prevValues: Record<string, string>, fieldName: string) => {\n      if (!fieldName || !values[fieldName]) {\n        return prevValues;\n      }\n      if (Array.isArray(values[fieldName])) {\n        const group: ReadonlyArray<any> = values[fieldName];\n        return {\n          ...prevValues,\n          ...group.reduce(\n            (\n              prevGroupField: Record<string, string>,\n              groupField: any,\n              index: number\n            ) => ({\n              ...prevGroupField,\n              ...Object.keys(groupField).reduce(\n                (prevObjField, groupFieldKey) => ({\n                  ...prevObjField,\n                  [`${fieldName}.${index}.${groupFieldKey}`]: values[fieldName][\n                    index\n                  ][groupFieldKey].toString()\n                }),\n                {} as Record<string, string>\n              )\n            }),\n            {} as Record<string, string>\n          )\n        };\n      }\n      if (\n        typeof values[fieldName] === \"string\" ||\n        typeof values[fieldName] === \"number\"\n      ) {\n        return {\n          ...prevValues,\n          [fieldName]: values[fieldName].toString()\n        };\n      }\n      return prevValues;\n    },\n    {} as Record<string, string>\n  );\n}\n\nexport function getDefaultValue(field: FieldT) {\n  if (field.default_multiple_selection) {\n    return field.default_multiple_selection as ReadonlyArray<string>;\n  }\n  if (field.name && field.default_checked) {\n    return field.name;\n  }\n  if (field.default !== undefined && field.default !== null) {\n    return field.default;\n  }\n  return \"\";\n}\n\nexport function getFieldValue({\n  field,\n  value\n}: {\n  field: FieldT;\n  value: string;\n}): string | null {\n  switch (field.widget) {\n    case \"date\":\n      return format(new Date(value), \"DD.MM.YYYY\");\n    case \"checkbox\":\n      if (!Array.isArray(value) ? \"si\" : \"no\") {\n        return value ? \"si\" : \"no\";\n      }\n      break;\n    case \"select\":\n      if (Array.isArray(field.options)) {\n        const selectedItem = field.options.find(o => o.value === value);\n        if (selectedItem) {\n          return selectedItem.label;\n        }\n      }\n      break;\n    case \"html\":\n      return field.default;\n  }\n  return value;\n}\n\n/*\n *  Works for radio buttons.\n */\nexport function getSelectedLabel(field: FieldT, value: string) {\n  const selectedItem = field.options\n    ? field.options.find(o => o && o.value === value)\n    : null;\n  return selectedItem ? selectedItem.label : null;\n}\n","import * as React from \"react\";\nimport Helmet from \"react-helmet\";\n\ntype SeoProps = {\n  siteConfig: any;\n  description?: string;\n  lang?: string;\n  meta?: ReadonlyArray<{\n    name: string;\n    content: string;\n  }>;\n  keywords?: ReadonlyArray<string>;\n  title: string;\n};\n\nfunction SEO({\n  siteConfig,\n  description,\n  lang = \"en\",\n  meta = [],\n  title,\n  keywords\n}: SeoProps) {\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang\n      }}\n      title={title || siteConfig.title}\n      meta={[\n        {\n          name: `description`,\n          content: description || siteConfig.description\n        },\n        {\n          property: `og:title`,\n          content: title\n        },\n        {\n          property: `og:description`,\n          content: description || siteConfig.description\n        },\n        {\n          property: `og:type`,\n          content: `website`\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`\n        },\n        {\n          name: `twitter:creator`,\n          content: siteConfig.author\n        },\n        {\n          name: `twitter:title`,\n          content: title\n        },\n        {\n          name: `twitter:description`,\n          content: description || siteConfig.description\n        },\n        {\n          name: `keywords`,\n          content: keywords || siteConfig.keywords\n        }\n      ].concat(meta)}\n    >\n      <html lang={lang} />\n    </Helmet>\n  );\n}\n\nexport default SEO;\n","import gql from \"graphql-tag\";\n\nexport const SEARCH_IPA = gql`\n  query SearchIpa($search: String!) {\n    search_ipa(args: { search: $search }) {\n      cod_amm\n      des_amm\n      Comune\n    }\n    ipa_pa(where: { cod_amm: { _eq: $search } }) {\n      cod_amm\n      des_amm\n      Comune\n    }\n  }\n`;\n\nexport const GET_IPA = gql`\n  query GetIpa($ipa_code: String!) {\n    ipa_pa(where: { cod_amm: { _eq: $ipa_code } }) {\n      cod_amm\n      des_amm\n      Comune\n    }\n    ipa_ou(\n      where: {\n        _and: {\n          cod_amm: { _eq: $ipa_code }\n          cod_ou: { _eq: \"Ufficio_Transizione_Digitale\" }\n        }\n      }\n    ) {\n      cod_ou\n      nome_resp\n      cogn_resp\n      mail_resp\n    }\n  }\n`;\n\nexport const NodeFragment = gql`\n  fragment NodeFragment on node {\n    id\n    created_at\n    updated_at\n    title\n    node_group {\n      group\n      group_ipa_pa {\n        des_amm\n      }\n    }\n    content\n    language\n    status\n    version\n    type\n  }\n`;\n\nexport const NodeRevisionFragment = gql`\n  fragment NodeRevisionFragment on node_revision {\n    id\n    created_at\n    updated_at\n    title\n    node_revision_group {\n      group\n      group_ipa_pa {\n        des_amm\n      }\n    }\n    content\n    language\n    status\n    version\n    type\n  }\n`;\n\nexport const UPSERT_NODE = gql`\n  mutation UpsertNode($node: node_insert_input!) {\n    insert_node(\n      objects: [$node]\n      on_conflict: {\n        constraint: node_pkey\n        update_columns: [status, title, content, version]\n      }\n    ) {\n      returning {\n        ...NodeFragment\n      }\n    }\n  }\n\n  ${NodeFragment}\n`;\n\nexport const PUBLISH_NODE = gql`\n  mutation PublishNode($id: uuid!, $version: Int!) {\n    update_node(\n      where: { id: { _eq: $id } }\n      _set: { status: \"published\", version: $version }\n    ) {\n      returning {\n        ...NodeFragment\n      }\n    }\n  }\n  ${NodeFragment}\n`;\n\nexport const GET_LATEST_NODE_WITH_PUBLISHED = gql`\n  query GetNode($id: uuid!) {\n    latest: node(where: { id: { _eq: $id } }, limit: 1) {\n      ...NodeFragment\n      published: revisions(\n        where: { status: { _eq: \"published\" } }\n        order_by: { version: desc }\n        limit: 1\n      ) {\n        ...NodeRevisionFragment\n      }\n    }\n  }\n\n  ${NodeFragment}\n  ${NodeRevisionFragment}\n`;\n\nexport const GET_NODE_REVISION_WITH_PUBLISHED = gql`\n  query GetNodeRevision($id: uuid!, $version: Int!) {\n    revision: node_revision(\n      where: { _and: { id: { _eq: $id }, version: { _eq: $version } } }\n      limit: 1\n    ) {\n      ...NodeRevisionFragment\n    }\n    published: node_revision(\n      where: { _and: { id: { _eq: $id }, status: { _eq: \"published\" } } }\n      order_by: { version: desc }\n      limit: 1\n    ) {\n      ...NodeRevisionFragment\n    }\n  }\n\n  ${NodeRevisionFragment}\n`;\n\nexport const GET_USER_NODES = gql`\n  query GetUserNodes($userId: uuid) {\n    node(where: { user_id: { _eq: $userId } }) {\n      id\n      created_at\n      updated_at\n      title\n      group\n      language\n      status\n      version\n      type\n    }\n  }\n`;\n\nexport const GET_USER_INFO = gql`\n  query GetUserInfo($userId: uuid) {\n    user(where: { id: { _eq: $userId } }) {\n      id\n      email\n    }\n  }\n`;\n","import * as React from \"react\";\nimport Helmet from \"react-helmet\";\n\nconst BodyStyles = ({ backgroundColor }: { backgroundColor: string }) => (\n  <Helmet>\n    <style>\n      {`\n    body {\n      background-color: ${backgroundColor} !important\n    }\n  `}\n    </style>\n  </Helmet>\n);\n\nexport default BodyStyles;\n","import * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport * as Loadable from \"react-loadable\";\nimport { GetNode_latest_published } from \"../generated/graphql/GetNode\";\nimport {\n  FieldT,\n  flattenFormFieldsWithKeys,\n  flattenFormValues,\n  FormT,\n  isGroupField,\n  toFirstGroupFieldName\n} from \"../utils/forms\";\n\nconst getViewfield = (fieldName: string, field: FieldT, value: string) => {\n  return fieldName ? (\n    <tr key={fieldName} className=\"mb-4\">\n      <th scope=\"row\">{field.title || field.name}</th>\n      <td>{value.toString()}</td>\n    </tr>\n  ) : (\n    <></>\n  );\n};\n\nconst renderViewFields = (\n  fields: Record<string, FieldT>,\n  values: Record<string, string>\n): readonly JSX.Element[] => {\n  return fields && values\n    ? Object.keys(values).reduce(\n        (prev, valueKey) =>\n          valueKey\n            ? [\n                ...prev,\n                getViewfield(\n                  valueKey,\n                  isGroupField(valueKey)\n                    ? fields[toFirstGroupFieldName(valueKey)]\n                    : fields[valueKey],\n                  values[valueKey]\n                )\n              ]\n            : prev,\n        [] as readonly JSX.Element[]\n      )\n    : [];\n};\n\nconst LoadableView = ({\n  node,\n  form,\n  values\n}: {\n  node: GetNode_latest_published;\n  form: FormT;\n  values: Record<string, string>;\n}) => {\n  const { t } = useTranslation();\n\n  const flattenedFields = flattenFormFieldsWithKeys(form);\n  const flattenedValues = flattenFormValues(values);\n\n  const LoadableTemplate = Loadable({\n    loader: () => import(`../custom/templates/${form.id}/node/view-template`),\n    render: (loaded, _) => {\n      const Template = loaded.default;\n      return (\n        <Template\n          form={form}\n          node={node}\n          fields={flattenedFields}\n          values={flattenedValues}\n        />\n      );\n    },\n    loading: ({ error: templateError }) => {\n      return templateError ? (\n        <table className=\"table table-hover table-bordered table-striped\">\n          <tbody>{renderViewFields(flattenedFields, flattenedValues)}</tbody>\n        </table>\n      ) : (\n        <p>{t(\"loading_data\")}</p>\n      );\n    }\n  });\n\n  return <LoadableTemplate />;\n};\n\nexport default LoadableView;\n","\"use strict\";\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/es6.promise\");\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.array.is-array\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nrequire(\"core-js/modules/es6.object.create\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar React = require(\"react\");\n\nvar PropTypes = require(\"prop-types\");\n\nvar ALL_INITIALIZERS = [];\nvar READY_INITIALIZERS = [];\n\nfunction isWebpackReady(getModuleIds) {\n  if ((typeof __webpack_modules__ === \"undefined\" ? \"undefined\" : _typeof(__webpack_modules__)) !== \"object\") {\n    return false;\n  }\n\n  return getModuleIds().every(function (moduleId) {\n    return typeof moduleId !== \"undefined\" && typeof __webpack_modules__[moduleId] !== \"undefined\";\n  });\n}\n\nfunction load(loader) {\n  var promise = loader();\n  var state = {\n    loading: true,\n    loaded: null,\n    error: null\n  };\n  state.promise = promise.then(function (loaded) {\n    state.loading = false;\n    state.loaded = loaded;\n    return loaded;\n  })[\"catch\"](function (err) {\n    state.loading = false;\n    state.error = err;\n    throw err;\n  });\n  return state;\n}\n\nfunction loadMap(obj) {\n  var state = {\n    loading: false,\n    loaded: {},\n    error: null\n  };\n  var promises = [];\n\n  try {\n    Object.keys(obj).forEach(function (key) {\n      var result = load(obj[key]);\n\n      if (!result.loading) {\n        state.loaded[key] = result.loaded;\n        state.error = result.error;\n      } else {\n        state.loading = true;\n      }\n\n      promises.push(result.promise);\n      result.promise.then(function (res) {\n        state.loaded[key] = res;\n      })[\"catch\"](function (err) {\n        state.error = err;\n      });\n    });\n  } catch (err) {\n    state.error = err;\n  }\n\n  state.promise = Promise.all(promises).then(function (res) {\n    state.loading = false;\n    return res;\n  })[\"catch\"](function (err) {\n    state.loading = false;\n    throw err;\n  });\n  return state;\n}\n\nfunction resolve(obj) {\n  return obj && obj.__esModule ? obj[\"default\"] : obj;\n}\n\nfunction render(loaded, props) {\n  return React.createElement(resolve(loaded), props);\n}\n\nfunction createLoadableComponent(loadFn, options) {\n  var _class, _temp;\n\n  if (!options.loading) {\n    throw new Error(\"react-loadable requires a `loading` component\");\n  }\n\n  var opts = Object.assign({\n    loader: null,\n    loading: null,\n    delay: 200,\n    timeout: null,\n    render: render,\n    webpack: null,\n    modules: null\n  }, options);\n  var res = null;\n\n  function init() {\n    if (!res) {\n      res = loadFn(opts.loader);\n    }\n\n    return res.promise;\n  }\n\n  ALL_INITIALIZERS.push(init);\n\n  if (typeof opts.webpack === \"function\") {\n    READY_INITIALIZERS.push(function () {\n      if (isWebpackReady(opts.webpack)) {\n        return init();\n      }\n    });\n  }\n\n  return _temp = _class = function (_React$Component) {\n    _inherits(LoadableComponent, _React$Component);\n\n    function LoadableComponent(props) {\n      _classCallCheck(this, LoadableComponent);\n\n      var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\n      _this.retry = function () {\n        _this.setState({\n          error: null,\n          loading: true,\n          timedOut: false\n        });\n\n        res = loadFn(opts.loader);\n\n        _this._loadModule();\n      };\n\n      init();\n      _this.state = {\n        error: res.error,\n        pastDelay: false,\n        timedOut: false,\n        loading: res.loading,\n        loaded: res.loaded\n      };\n      return _this;\n    }\n\n    LoadableComponent.preload = function preload() {\n      return init();\n    };\n\n    LoadableComponent.prototype.componentWillMount = function componentWillMount() {\n      this._mounted = true;\n\n      this._loadModule();\n    };\n\n    LoadableComponent.prototype._loadModule = function _loadModule() {\n      var _this2 = this;\n\n      if (this.context.loadable && Array.isArray(opts.modules)) {\n        opts.modules.forEach(function (moduleName) {\n          _this2.context.loadable.report(moduleName);\n        });\n      }\n\n      if (!res.loading) {\n        return;\n      }\n\n      if (typeof opts.delay === \"number\") {\n        if (opts.delay === 0) {\n          this.setState({\n            pastDelay: true\n          });\n        } else {\n          this._delay = setTimeout(function () {\n            _this2.setState({\n              pastDelay: true\n            });\n          }, opts.delay);\n        }\n      }\n\n      if (typeof opts.timeout === \"number\") {\n        this._timeout = setTimeout(function () {\n          _this2.setState({\n            timedOut: true\n          });\n        }, opts.timeout);\n      }\n\n      var update = function update() {\n        if (!_this2._mounted) {\n          return;\n        }\n\n        _this2.setState({\n          error: res.error,\n          loaded: res.loaded,\n          loading: res.loading\n        });\n\n        _this2._clearTimeouts();\n      };\n\n      res.promise.then(function () {\n        update();\n      })[\"catch\"](function (err) {\n        update();\n      });\n    };\n\n    LoadableComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n      this._mounted = false;\n\n      this._clearTimeouts();\n    };\n\n    LoadableComponent.prototype._clearTimeouts = function _clearTimeouts() {\n      clearTimeout(this._delay);\n      clearTimeout(this._timeout);\n    };\n\n    LoadableComponent.prototype.render = function render() {\n      if (this.state.loading || this.state.error) {\n        return React.createElement(opts.loading, {\n          isLoading: this.state.loading,\n          pastDelay: this.state.pastDelay,\n          timedOut: this.state.timedOut,\n          error: this.state.error,\n          retry: this.retry\n        });\n      } else if (this.state.loaded) {\n        return opts.render(this.state.loaded, this.props);\n      } else {\n        return null;\n      }\n    };\n\n    return LoadableComponent;\n  }(React.Component), _class.contextTypes = {\n    loadable: PropTypes.shape({\n      report: PropTypes.func.isRequired\n    })\n  }, _temp;\n}\n\nfunction Loadable(opts) {\n  return createLoadableComponent(load, opts);\n}\n\nfunction LoadableMap(opts) {\n  if (typeof opts.render !== \"function\") {\n    throw new Error(\"LoadableMap requires a `render(loaded, props)` function\");\n  }\n\n  return createLoadableComponent(loadMap, opts);\n}\n\nLoadable.Map = LoadableMap;\n\nvar Capture = function (_React$Component2) {\n  _inherits(Capture, _React$Component2);\n\n  function Capture() {\n    _classCallCheck(this, Capture);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Capture.prototype.getChildContext = function getChildContext() {\n    return {\n      loadable: {\n        report: this.props.report\n      }\n    };\n  };\n\n  Capture.prototype.render = function render() {\n    return React.Children.only(this.props.children);\n  };\n\n  return Capture;\n}(React.Component);\n\nCapture.propTypes = {\n  report: PropTypes.func.isRequired\n};\nCapture.childContextTypes = {\n  loadable: PropTypes.shape({\n    report: PropTypes.func.isRequired\n  }).isRequired\n};\nLoadable.Capture = Capture;\n\nfunction flushInitializers(initializers) {\n  var promises = [];\n\n  while (initializers.length) {\n    var init = initializers.pop();\n    promises.push(init());\n  }\n\n  return Promise.all(promises).then(function () {\n    if (initializers.length) {\n      return flushInitializers(initializers);\n    }\n  });\n}\n\nLoadable.preloadAll = function () {\n  return new Promise(function (resolve, reject) {\n    flushInitializers(ALL_INITIALIZERS).then(resolve, reject);\n  });\n};\n\nLoadable.preloadReady = function () {\n  return new Promise(function (resolve, reject) {\n    // We always will resolve, errors should be handled within loading UIs.\n    flushInitializers(READY_INITIALIZERS).then(resolve, resolve);\n  });\n};\n\nmodule.exports = Loadable;","var map = {\n\t\"./dichiarazione-accessibilita/node/view-template\": [\n\t\t555,\n\t\t14,\n\t\t16\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 439;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}